{
  "openapi": "3.0.3",
  "info": {
    "version": "4.0.0",
    "title": "API Reference",
    "description": "Orbital Gateway API",
    "contact": {
      "name": "Orbital Gateway Support",
      "url": "https://developer.jpmorgan.com/?support"
    }
  },
  "servers": [
    {
      "url": "https://orbitalvar1.chasepaymentech.com/gwapi/v4/gateway",
      "description": "Sandbox/VAR Environment",
      "variables": {
        "basePath": {
          "default": "gwapi/v4/gateway"
        }
      }
    }
  ],
  "paths": {
    "/payments": {
      "parameters": null,
      "post": {
        "summary": "Create a Payment",
        "description": "Used to perform a new authorization, authorization and capture, or force capture transaction",
        "operationId": "payments",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Create Payment Authorization only, Authorization-and-Capture, and Force Capture",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/paymentsRequest"
              },
              "examples": {
                "Make a simple card payment - Authorization Only": {
                  "summary": "Make a simple card payment - Authorization Only",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    }
                  }
                },
                "Make a simple card payment - Authorization and Capture": {
                  "summary": "Make a simple card payment - Authorization and Capture",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    }
                  }
                },
                "Make a simple card payment - Authorization with create profile": {
                  "summary": "Make a simple card payment - Authorization with create profile",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "profile": {
                      "customerRefNum": "testprofile01",
                      "addProfileFromOrder": "S",
                      "profileOrderOverideInd": "NO"
                    }
                  }
                },
                "Make a simple card payment - Authorization + Capture with create profile": {
                  "summary": "Make a simple card payment - Authorization + Capture with create profile",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "profile": {
                      "customerRefNum": "testprofile02",
                      "addProfileFromOrder": "S",
                      "profileOrderOverideInd": "NO"
                    }
                  }
                },
                "Make a simple card payment - Authorization using profile": {
                  "summary": "Make a simple card payment - Authorization using profile",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "useProfile": {
                        "useCustomerRefNum": "testprofile01"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "500",
                      "industryType": "EC"
                    }
                  }
                },
                "Make a simple card payment with AVS - Authorization and Capture": {
                  "summary": "Make a simple card payment with AVS - Authorization and Capture",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "avsBilling": {
                      "avsAddress1": "123 Main St",
                      "avsAddress2": "Apt 2",
                      "avsCity": "Tampa",
                      "avsState": "FL",
                      "avsZip": "12345"
                    }
                  }
                },
                "Make a simple card payment with Soft Descriptor and Safetech Token- Authorization": {
                  "summary": "Make a simple card payment with Soft Descriptor and Safetech Token",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "CZ",
                        "ccAccountNum": "444444HZYFLT4448",
                        "ccExp": "202506",
                        "tokenTxnType": "UT"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "softDesc": {
                      "softDescMercName": "MERCHANT",
                      "softDescProdDesc": "PENDING",
                      "softDescMercCity": null,
                      "softDescMercPhone": null,
                      "softDescMercURL": null,
                      "softDescMercEmail": null
                    }
                  }
                },
                "Make a simple card payment with Soft Merchant Descriptors": {
                  "summary": "Make a simple card payment for Soft Merchant Descriptors",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "softMerchantDescriptors": {
                      "smdDBA": "TestName",
                      "smdMerchantID": "750000000040",
                      "smdContactInfo": "TestContact",
                      "smdStreet": "Test Street",
                      "smdCity": "Tampa",
                      "smdRegion": "FL",
                      "smdPostalCode": "33637",
                      "smdCountryCode": "USA",
                      "smdMCC": "5444",
                      "smdEmail": "test@gmail.com",
                      "smdPhoneNumber": "8138138130",
                      "smdServiceEstablishmentNum": "123456",
                      "smdTaxExemptCharityInd": "N"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    }
                  }
                },
                "Make a simple payment with Alternative Payment Method - PayPal": {
                  "summary": "Make a simple payment with Alternative Payment Method - PayPal",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "alternativePaymentMethod": {
                      "paymentMethod": "PG",
                      "customerCurrencyCode": "USD",
                      "customerCountryCode": "US",
                      "customerPreferredLanguage": "en",
                      "shopperFirstName": "John",
                      "shopperLastName": "Smith",
                      "shopperEmail": "johnsmith@gmail.com",
                      "merchantRedirectURL": "https://www.test.com/test123",
                      "customerLocale": "en-US",
                      "dynamicDescriptor": "This is test",
                      "shipping": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "address1": "123 Main St",
                        "address2": "Apt #123",
                        "postalCode": "36477",
                        "countryCode": "US",
                        "state": "FL",
                        "city": "Tampa",
                        "isShippingRequired": "yes"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    }
                  }
                },
                "Make a simple payment with Alternative Payment Method - Afterpay": {
                  "summary": "Make a simple payment with Alternative Payment Method - Afterpay",
                  "value": {
                    "version": "4.6",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "alternativePaymentMethod": {
                      "paymentMethod": "AY",
                      "customerCurrencyCode": "USD",
                      "customerCountryCode": "US",
                      "customerPreferredLanguage": "en",
                      "shopperFirstName": "John",
                      "shopperLastName": "Smith",
                      "shopperEmail": "johnsmith@gmail.com",
                      "merchantRedirectURL": "https://www.test.com/test123",
                      "orderItems": "[{\"name\":\"Blue Carabiner\",\"quantity\":1,\"price\":\"40.00\",\"currency\":\"USD\"},{\"name\":\"Jeans\",\"quantity\":1,\"price\":\"20.00\",\"currency\":\"USD\"}]",
                      "shipping": {
                        "firstName": "John",
                        "lastName": "Smith",
                        "address1": "123 Main St",
                        "address2": "Apt #123",
                        "postalCode": "36477",
                        "countryCode": "US",
                        "state": "FL",
                        "city": "Tampa"
                      },
                      "billing": {
                        "altmopBillingFirstName": "John",
                        "altmopBillingLastName": "Smith",
                        "altmopBillingAddress1": "123 Main St",
                        "altmopBillingAddress2": "Apt #123",
                        "altmopBillingPostalCode": "36477",
                        "altmopBillingCity": "Tampa",
                        "altmopBillingState": "FL",
                        "altmopBillingCountryCode": "US"
                      },
                      "order": {
                        "orderID": "123456",
                        "amount": "100",
                        "industryType": "EC"
                      }
                    }
                  }
                },
                "Cardholder-initiated - Authorization and Capture": {
                  "summary": "Cardholder-initiated - Authorization and Capture",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "CGEN",
                      "mitStoredCredentialInd": "Y"
                    }
                  }
                },
                "Cardholder-initiated - Authorization Save MIT/CIT TXID in profile": {
                  "summary": "Cardholder-initiated - Authorization Save MIT/CIT TXID in profile",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "CGEN",
                      "mitStoredCredentialInd": "Y"
                    },
                    "profile": {
                      "customerRefNum": "testprofile26",
                      "addProfileFromOrder": "S",
                      "profileOrderOverideInd": "NO"
                    }
                  }
                },
                "Card Present - Authorization and Capture": {
                  "summary": "Make a simple card present payment - Authorization and Capture",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000002",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "1234501",
                      "amount": "100",
                      "industryType": "RE"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "cardPresent": {
                      "emvInfo": {
                        "posEntryMode": "911",
                        "dataEntrySource": "41",
                        "panSequenceNumber": "02",
                        "applicationId": "A0000000112",
                        "applicationLabel": "VISA CREDIT",
                        "chipCardData": "2269F02060000000148009F2608301BE906CA823F4E820258009F360200039F34030000009F2701809C01009F1E0830303030303030319F100A0105A0000300000000009F3303E0F0E09F1A0208409A031209139F350100950500000000005F2A0208409F3704123456789F0605A00000152",
                        "terminalEntry": "06",
                        "tvr": "0000008000",
                        "tsi": "0080"
                      },
                      "cpNonEncrypted": {
                        "magStripeTrack1": null,
                        "magStripeTrack2": "NDA1NTAxMTExMTExMTExMT0xNTEyMTAxNTQzMjExMjM0NTY3OA=="
                      },
                      "cpDebit": {
                        "pin": null,
                        "pinKeySerialNumber": null
                      }
                    }
                  }
                },
                "Merchant-initiated - Authorization and Capture": {
                  "summary": "Merchant-initiated  - Authorization and Capture",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "MRAU",
                      "mitStoredCredentialInd": "Y",
                      "mitSubmittedTransactionID": "010241692161883"
                    }
                  }
                },
                "Merchant-initiated - Recurring Authorization and Capture": {
                  "summary": "Merchant-initiated  - Authorization and Capture",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "RC"
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "MREC",
                      "mitStoredCredentialInd": "Y",
                      "mitSubmittedTransactionID": "011131692166180"
                    }
                  }
                },
                "Incremental Authorization - Initial": {
                  "summary": "Incremental authorization - Initial",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "CEST"
                    }
                  }
                },
                "Incremental Authorization - Subsequent": {
                  "summary": "Incremental authorization - Subsequent",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "txRefNum": "5F49D0629BD1FF8452EF221BC63B63BF7BA054D9"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "MINC"
                    }
                  }
                },
                "Incremental Authorization with soft descriptor - Initial": {
                  "summary": "Incremental Authorization with soft descriptor - Initial",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "444444HZYFLT4448",
                        "ccExp": "202506",
                        "tokenTxnType": "UT"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "softDesc": {
                      "softDescMercName": "MERCHANT",
                      "softDescProdDesc": "PENDING",
                      "softDescMercCity": null,
                      "softDescMercPhone": null,
                      "softDescMercURL": null,
                      "softDescMercEmail": null
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "CEST"
                    }
                  }
                },
                "Incremental Authorization with soft descriptor - Subsequent": {
                  "summary": "Incremental Authorization with soft descriptor - Subsequent",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "444444HZYFLT4448",
                        "ccExp": "202506",
                        "tokenTxnType": "UT"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "txRefNum": "6018CEA0CAA3F85B1BDC18470FEF42D7D35E5397"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "softDesc": {
                      "softDescMercName": "MERCHANT",
                      "softDescProdDesc": "PENDING",
                      "softDescMercCity": null,
                      "softDescMercPhone": null,
                      "softDescMercURL": null,
                      "softDescMercEmail": null
                    },
                    "merchantInitiatedTransaction": {
                      "mitMsgType": "MINC"
                    }
                  }
                },
                "Verify By Visa": {
                  "summary": "Verify By Visa",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cryptogram": {
                      "digitalTokenCryptogram": "Aa3mrjQABcaBw6GJBBi1MAACAAA="
                    },
                    "additionalAuthInfo": {
                      "authenticationECIInd": "5"
                    }
                  }
                },
                "Mastercard Secure Code - MCSC": {
                  "summary": "Mastercard Secure Code - MCSC",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cryptogram": {
                      "digitalTokenCryptogram": "hsjuQljfl86bAAAAAACm9zU6aqY="
                    },
                    "additionalAuthInfo": {
                      "authenticationECIInd": "5"
                    }
                  }
                },
                "3D Secure - Discover": {
                  "summary": "3D Secure - Discover",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "6011111111111117",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "222"
                    },
                    "cryptogram": {
                      "digitalTokenCryptogram": "AAEBCSciUQAAARUJIyJRHwXtywA="
                    },
                    "additionalAuthInfo": {
                      "authenticationECIInd": "7",
                      "pymtBrandProgramCode": "DPB"
                    }
                  }
                },
                "3D Secure - American Express SafeKey": {
                  "summary": "3D Secure - American Express SafeKey",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "378282246310005",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "cryptogram": {
                      "digitalTokenCryptogram": "AAAAAAAAt5fMJPDr320qAAALwwA=hq0BA9EAAAGXIJcAGAAAABKU0+s="
                    },
                    "additionalAuthInfo": {
                      "authenticationECIInd": "7",
                      "pymtBrandProgramCode": "ASK"
                    }
                  }
                },
                "Consumer Digital Payment Token - CDPT/DPAN": {
                  "summary": "Consumer Digital Payment Token",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4055011111111111",
                        "ccExp": "202506",
                        "dpanInd": "Y"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "cryptogram": {
                      "digitalTokenCryptogram": "AAABCCMRERI0VniQEhERAAAAAAA="
                    },
                    "additionalAuthInfo": {
                      "authenticationECIInd": "5"
                    }
                  }
                },
                "Safetech Page Encryption - get token in transaction using $0": {
                  "summary": "Safetech Page Encryption - get token in transaction using $0",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "0",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "413"
                    },
                    "pageEncryption": {
                      "pieSubscriberID": "123456789123",
                      "pieFormatID": "64",
                      "pieIntegrityCheck": "74c43eba8e60c47a",
                      "pieKeyID": "3224dfa5",
                      "piePhaseID": "0",
                      "pieMode": "FPE"
                    }
                  }
                },
                "Safetech Page Encryption - get token in transaction using $0 with AVS": {
                  "summary": "Safetech Page Encryption - get token in transaction using $0 with AVS",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "0",
                      "industryType": "EC"
                    },
                    "avsBilling": {
                      "avsAddress1": "123 Main Street",
                      "avsCity": "Tampa",
                      "avsState": "FL",
                      "avsCountryCode": "US",
                      "avsZip": "12345",
                      "avsName": "John Smith",
                      "avsPhone": "8888888888"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "413"
                    },
                    "pageEncryption": {
                      "pieSubscriberID": "123456789123",
                      "pieFormatID": "64",
                      "pieIntegrityCheck": "74c43eba8e60c47a",
                      "pieKeyID": "3224dfa5",
                      "piePhaseID": "0",
                      "pieMode": "FPE"
                    }
                  }
                },
                "Safetech Page Encryption - get token in transaction": {
                  "summary": "Safetech Page Encryption - get token in transaction",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4055011111111111",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "413"
                    },
                    "pageEncryption": {
                      "pieSubscriberID": "123456789123",
                      "pieFormatID": "64",
                      "pieIntegrityCheck": "2ac3e9a6e282e087",
                      "pieKeyID": "8f9bd30a",
                      "piePhaseID": "0",
                      "pieMode": "FPE"
                    }
                  }
                },
                "Safetech Page Encryption - $0 auth and create profile with token": {
                  "summary": "Safetech Page Encryption - $0 auth and create profile with token",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "0",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "pageEncryption": {
                      "pieSubscriberID": "123456789123",
                      "pieFormatID": "64",
                      "pieIntegrityCheck": "15dc9d9fbcd5cc5a",
                      "pieKeyID": "42f87c95",
                      "piePhaseID": "1",
                      "pieMode": "FPE"
                    },
                    "profile": {
                      "customerRefNum": "testprofile30",
                      "addProfileFromOrder": "S",
                      "profileOrderOverideInd": "NO"
                    }
                  }
                },
                "Safetech Tokenization - get token in transaction": {
                  "summary": "Safetech Tokenization - get token in transaction",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4055011111111111",
                        "ccExp": "202506",
                        "tokenTxnType": "GT"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    }
                  }
                },
                "Safetech Tokenization - use token in transaction": {
                  "summary": "Safetech Tokenization - use token in transaction",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "444444HZYFLT4448",
                        "ccExp": "202206",
                        "tokenTxnType": "UT"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    }
                  }
                },
                "Level 2 data": {
                  "summary": "An example of level 2 data",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202206"
                      }
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "222"
                    },
                    "avsBilling": {
                      "avsAddress1": "123 Main St",
                      "avsAddress2": "Apt 1",
                      "avsCity": "Tampa",
                      "avsState": "FL",
                      "avsCountryCode": "US",
                      "avsZip": "123456",
                      "avsName": "John Smith",
                      "avsPhone": "8888888888"
                    },
                    "level2": {
                      "taxInd": "1",
                      "taxAmount": "1200",
                      "pCardOrderID": "3432542",
                      "pCardDestZip": "123456"
                    }
                  }
                },
                "Level 3 data": {
                  "summary": "An example of level 3 data",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202206"
                      }
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "222"
                    },
                    "avsBilling": {
                      "avsAddress1": "123 Main St",
                      "avsAddress2": "Apt 1",
                      "avsCity": "Tampa",
                      "avsState": "FL",
                      "avsCountryCode": "US",
                      "avsZip": "123456",
                      "avsName": "John Smith",
                      "avsPhone": "8888888888"
                    },
                    "level2": {
                      "taxInd": "1",
                      "taxAmount": "1200",
                      "pCardOrderID": "3432542",
                      "pCardDestZip": "43233"
                    },
                    "level3": {
                      "pCard3DestCountryCd": "USA",
                      "pCard3ShipFromZip": "123456",
                      "pCard3LineItemCount": "2",
                      "pCard3LineItems": {
                        "item": [
                          {
                            "pCard3DtlIndex": "1",
                            "pCard3DtlDesc": "rstre565464",
                            "pCard3DtlProdCd": "3432",
                            "pCard3DtlQty": "250000",
                            "pCard3DtlUOM": "CDL",
                            "pCard3DtlTaxAmt": "1200",
                            "pCard3DtlTaxRate": "7000",
                            "pCard3Dtllinetot": "3125",
                            "pCard3DtlCommCd": "4353",
                            "pCard3DtlUnitCost": "12500",
                            "pCard3DtlGrossNet": "N",
                            "pCard3DtlTaxType": "Y",
                            "pCard3DtlDebitInd": "D"
                          },
                          {
                            "pCard3DtlIndex": "2",
                            "pCard3DtlDesc": "rstre565465",
                            "pCard3DtlProdCd": "3432",
                            "pCard3DtlQty": "210000",
                            "pCard3DtlUOM": "CDL",
                            "pCard3DtlTaxAmt": "1400",
                            "pCard3DtlTaxRate": "7000",
                            "pCard3Dtllinetot": "3125",
                            "pCard3DtlCommCd": "4353",
                            "pCard3DtlUnitCost": "12500",
                            "pCard3DtlGrossNet": "N",
                            "pCard3DtlTaxType": "Y",
                            "pCard3DtlDebitInd": "D"
                          }
                        ]
                      }
                    }
                  }
                },
                "Pinless debit e-commerce": {
                  "summary": "Pinless debit e-commerce",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments",
                      "retryTrace": null
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "DP",
                        "ccAccountNum": "2226350123456999",
                        "ccExp": "202206"
                      }
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "222"
                    },
                    "avsBilling": {
                      "avsAddress1": "123 Main St",
                      "avsAddress2": "Apt 1",
                      "avsZip": "11111"
                    },
                    "debit": {
                      "pinlessDebitTxnType": "EC",
                      "pinlessDebitMerchantUrl": "www.pinlessdebitpinlessdebitpinlessdebit.com"
                    }
                  }
                },
                "Pinless debit bill-pay": {
                  "summary": "Pinless debit bill-pay",
                  "value": {
                    "version": "4.7",
                    "transType": "AC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments",
                      "retryTrace": null
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "DP",
                        "ccAccountNum": "2226350123456999",
                        "ccExp": "202506"
                      }
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "222"
                    },
                    "avsBilling": {
                      "avsAddress1": "123 Main St",
                      "avsAddress2": "Apt 1",
                      "avsZip": "11111"
                    },
                    "debit": {
                      "debitBillerReferenceNumber": "23498735",
                      "pinlessDebitTxnType": "BP"
                    }
                  }
                },
                "TAA and Cruise": {
                  "summary": "Transaction Advice Addendum and Cruise Infomation",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4111111111111111",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "310414",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    },
                    "travelTicketAndPassengerInfo": {
                      "tAATicketNumber": "123456789012345",
                      "tAAPassengerName": "12345678901234567890123456789",
                      "tAACustomerCode": "1234567890123456789012345",
                      "tAAIssueDate": "210120",
                      "tAAIssuingCarrier": "ABCD",
                      "tAAArrivalDate": "210120",
                      "tAANumberInParty": "123",
                      "tAAConjunctionTicketIndicator": "Y",
                      "tAAElectronicTicketIndicator": "N",
                      "tAARestrictedTicketIndicator": "0",
                      "tAAIATAClientCode": "12345678901234567",
                      "tAACreditReasonIndicator": "A",
                      "tAATicketChangeIndicator": "C",
                      "tAADocumentType": "01",
                      "tAATicketType": "T",
                      "tAAFormatCode": "01",
                      "tAATransactionType": "TKT",
                      "tAATicketingCarrierName": "1234567890123456789012345",
                      "tAATicketIssueCity": "123456789012345678",
                      "tAATravelPackageIndicator": "N"
                    },
                    "travelFareDetail": {
                      "tAATotalFare": "123456789012",
                      "tAATotalFees": "123456789012",
                      "tAATotalTaxes": "123456789012",
                      "tAAExchangeTicketAmount": "123456789012",
                      "tAAExchangeFeeAmount": "123456789012",
                      "tAAInvoiceNumber": "123456",
                      "tAAOriginalCurrencyCode": "840"
                    },
                    "cruiseTravelDetails": {
                      "tAADepartureDate": "210126",
                      "tAAReturnDate": "210207",
                      "tAATotalCost": "123456789012",
                      "tAACruiseDuration": "12",
                      "tAAShipName": "abcdefghijklmnopqrst",
                      "tAARegionCode": "abc",
                      "tAACountryCode": "abc",
                      "tAACityName": "abcdefghijklmnopqrstu"
                    },
                    "passengerTransportTripLegs": {
                      "passengerTransportTripLegType": [
                        {
                          "tripLegRecordSequenceNumber": "001",
                          "conjunctionTicketNumber": "123456789012345",
                          "exchangeTicketNumber": "123456789012345",
                          "couponNumber": "1",
                          "serviceClass": "ab",
                          "carrierCode": "ab",
                          "stopOverCode": "O",
                          "cityOfOriginAirportCode": "abcde",
                          "cityOfDestinationAirportCode": "abcde",
                          "flightNumber": "12345",
                          "departureDate": "210315",
                          "departureTime": "1200",
                          "arrivalTime": "1400",
                          "fareBasisCode": "123456789012345",
                          "tripLegFare": "123456789012",
                          "tripLegTaxes": "123456789012",
                          "tripLegFee": "123456789012",
                          "endorsementsRestrictions": "abcdefghijklmnopqrst"
                        },
                        {
                          "tripLegRecordSequenceNumber": "002",
                          "conjunctionTicketNumber": "123456789012345",
                          "exchangeTicketNumber": "123456789012345",
                          "couponNumber": "1",
                          "serviceClass": "ab",
                          "carrierCode": "ab",
                          "stopOverCode": "O",
                          "cityOfOriginAirportCode": "abcde",
                          "cityOfDestinationAirportCode": "abcde",
                          "flightNumber": "12345",
                          "departureDate": "210315",
                          "departureTime": "1200",
                          "arrivalTime": "1400",
                          "fareBasisCode": "123456789012345",
                          "tripLegFare": "123456789012",
                          "tripLegTaxes": "123456789012",
                          "tripLegFee": "123456789012",
                          "endorsementsRestrictions": "abcdefghijklmnopqrst"
                        }
                      ]
                    }
                  }
                },
                "Force Capture": {
                  "summary": "An example of a prior/force/voice transaction",
                  "value": {
                    "version": "4.7",
                    "transType": "FC",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments",
                      "priorAuthCd": "654321"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202206"
                      }
                    }
                  }
                },
                "Make a simple card payment - tokenAssuranceMethod": {
                  "summary": "Make a simple card payment - tokenAssuranceMethod",
                  "value": {
                    "version": "4.7",
                    "transType": "A",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "4444444444444448",
                        "ccExp": "202206"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "tokenAssuranceMethod": "10"
                    },
                    "cardholderVerification": {
                      "ccCardVerifyNum": "123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/paymentsResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/payments-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/refund": {
      "parameters": null,
      "post": {
        "summary": "Create a refund",
        "description": "Used to perform a refund transaction",
        "operationId": "refund",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Refund transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/refundRequest"
              },
              "examples": {
                "Refund": {
                  "summary": "An example of a refund transaction.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments"
                    }
                  }
                },
                "Refund using a previous payment reference": {
                  "summary": "An example of a refund transaction.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC",
                      "comments": "comments",
                      "txRefNum": "5F67C6E74C4D53364FA4EB642EB2CE82108D53F7"
                    }
                  }
                },
                "Refund using a previous payment reference and retryTrace for Alternative Payment Methods": {
                  "summary": "Refund using a previous payment reference and retryTrace for Alternative Payment Methods.",
                  "value": {
                    "version": "4.7",
                    "transType": "R",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "alternativePaymentMethod": {
                      "customerCurrencyCode": "GPB",
                      "paymentMethod": "PG"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "retryTrace": "123321001",
                      "txRefNum": "6213397C2B166208CAB2231B4816EAF9338753DD"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/refundResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/refund-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/capture": {
      "parameters": null,
      "post": {
        "summary": "Capture part or all of an authorization",
        "description": "Used to capture a pre-auth for split shipment and settlement",
        "operationId": "capture",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Capture transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/captureRequest"
              },
              "examples": {
                "Capture specific amount": {
                  "summary": "An example of a capture transaction.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "txRefNum": "5F2C93F8E1B3B9E3095D31165071400DC6975441"
                    }
                  }
                },
                "Capture full amount": {
                  "summary": "An example of a full capture transaction.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "txRefNum": "5F2C93F8E1B3B9E3095D31165071400DC6975441"
                    }
                  }
                },
                "Capture with Soft Descriptors": {
                  "summary": "Capture with Soft Descriptors.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "txRefNum": "5F2C93F8E1B3B9E3095D31165071400DC6975441",
                      "amount": "100"
                    },
                    "softDesc": {
                      "softDescMercName": "MERCHANT",
                      "softDescProdDesc": "COMPLETE",
                      "softDescMercCity": "",
                      "softDescMercPhone": "",
                      "softDescMercURL": "",
                      "softDescMercEmail": ""
                    }
                  }
                },
                "Capture with partial reversal amount": {
                  "summary": "Capture with partial reversal amount.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "txRefNum": "5F2C93F8E1B3B9E3095D31165071400DC6975441",
                      "partialReversalAmount": "200"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/captureResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/capture-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/reversal": {
      "parameters": null,
      "post": {
        "summary": "Reverse a Payment",
        "description": "Used to reverse a previous transaction, partially or in full.",
        "operationId": "reversal",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Reversal transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reversalRequest"
              },
              "examples": {
                "Reversal": {
                  "summary": "An example of a reversal transaction.",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "12345",
                      "txRefNum": "5F4E496C7X9E96352EDFDC19AAC4422E403D53DC"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reversalResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/reversal-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/settle": {
      "parameters": null,
      "post": {
        "summary": "Settle the current batch",
        "description": "Used to settle the current open batch.",
        "operationId": "settle",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Settle request details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/settleRequest"
              },
              "examples": {
                "Settle": {
                  "summary": "An example of a settle request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/settleResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/settle-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "parameters": null,
      "post": {
        "summary": "Add a new profile",
        "description": "Used to create a profile",
        "operationId": "profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Profile add transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profileAddRequest"
              },
              "examples": {
                "Profile Add": {
                  "summary": "An example of a profile add request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001"
                    },
                    "order": {
                      "customerProfileOrderOverideInd": "NO",
                      "customerProfileFromOrderInd": "A",
                      "orderDefaultAmount": "1050"
                    },
                    "paymentInstrument": {
                      "customerAccountType": "CC",
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202206"
                      }
                    },
                    "profile": {
                      "customerName": "Customer Name",
                      "customerAddress1": "123 Main St",
                      "customerCity": "Tampa",
                      "customerState": "FL",
                      "customerZIP": "123456",
                      "customerEmail": "email@email.com",
                      "customerPhone": "1234561234",
                      "customerCountryCode": "US"
                    }
                  }
                },
                "Profile Add With Managed Billing": {
                  "summary": "An example of a profile add request with Managaed Billing",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001"
                    },
                    "order": {
                      "customerProfileOrderOverideInd": "NO",
                      "customerProfileFromOrderInd": "A",
                      "orderDefaultAmount": "1050"
                    },
                    "paymentInstrument": {
                      "customerAccountType": "CC",
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202206"
                      }
                    },
                    "profile": {
                      "customerName": "Customer Name",
                      "customerAddress1": "123 Main St",
                      "customerCity": "Tampa",
                      "customerState": "FL",
                      "customerZIP": "123456",
                      "customerEmail": "email@email.com",
                      "customerPhone": "1234561234",
                      "customerCountryCode": "US"
                    },
                    "managedBilling": {
                      "mbType": "R",
                      "mbOrderIdGenerationMethod": "IO",
                      "mbRecurringStartDate": "02122020",
                      "mbRecurringEndDate": "",
                      "mbRecurringNoEndDateFlag": "Y",
                      "mbRecurringMaxBillings": "",
                      "mbRecurringFrequency": "? */5 MON",
                      "mbDeferredBillDate": ""
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/profileResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/profile-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update an existing profile",
        "description": "Used to update a profile",
        "operationId": "profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Profile update transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profileChangeRequest"
              },
              "examples": {
                "Profile Update": {
                  "summary": "An example of a profile update request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202206"
                      }
                    },
                    "profile": {
                      "customerRefNum": "12345678",
                      "customerName": "Customer Name",
                      "customerAddress1": "123 Main St",
                      "status": "I"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/profileResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/profile-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a profile",
        "description": "Used to delete a profile",
        "operationId": "profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Profile delete transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/profileDeleteRequest"
              },
              "examples": {
                "Profile Delete": {
                  "summary": "An example of a profile delete request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001"
                    },
                    "profile": {
                      "customerRefNum": "12345678"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/profileResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/profile-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/profile/version/{version}/bin/{bin}/customerrefnum/{customerrefnum}": {
      "parameters": null,
      "get": {
        "summary": "Retrieve profile details",
        "description": "Used to retrieve a profile's information",
        "operationId": "profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          },
          {
            "name": "version",
            "description": "version",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "bin",
            "description": "bin",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "customerrefnum",
            "description": "Profile ID",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/profileResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/profile-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/giftcard": {
      "parameters": null,
      "post": {
        "summary": "Giftcard actions (activate, add value, refund, balance inquiry)",
        "description": "Used to perform a gift card activation, authorization, deactivation, reactivation, add value, redemption, redemption completion, refund, reversal, refund, or balance inquiry transaction",
        "operationId": "giftcard",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Gift card transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/giftCardRequest"
              },
              "examples": {
                "Activation": {
                  "summary": "An example of a gift card activation transaction",
                  "value": {
                    "version": "4.7",
                    "flexAction": "activate",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    }
                  }
                },
                "Block Activate": {
                  "summary": "An example of a gift card block activation transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "blockactivate",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "startAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "amount": "100",
                      "industryType": "EC"
                    },
                    "additionalAuthInfo": {
                      "activationCount": "9"
                    }
                  }
                },
                "Deactivate": {
                  "summary": "An example of a gift card deactivation transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "deactivate",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC"
                    }
                  }
                },
                "Reactivate": {
                  "summary": "An example of a gift card reactivation transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "reactivate",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "amount": "1000"
                    }
                  }
                },
                "Add Value": {
                  "summary": "An example of a gift card add value transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "addvalue",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "amount": "1000"
                    }
                  }
                },
                "Authorization": {
                  "summary": "An example of a gift card pre-authorization transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "auth",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "amount": "1000"
                    }
                  }
                },
                "Redemption": {
                  "summary": "An example of a gift card redemption transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "redemption",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "amount": "1000"
                    }
                  }
                },
                "Redemption Completion": {
                  "summary": "An example of a gift card redemption completion transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "redemptioncompletion",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "amount": "1000",
                      "priorAuthCd": "123456",
                      "txRefNum": ""
                    }
                  }
                },
                "Refund": {
                  "summary": "An example of a gift card refund transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "refund",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "amount": "1000"
                    }
                  }
                },
                "Balance Inquiry": {
                  "summary": "An example of a gift card balance inquiry transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "balanceinquiry",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC"
                    }
                  }
                },
                "Reversal": {
                  "summary": "An example of a gift card reversal transaction.",
                  "value": {
                    "version": "4.7",
                    "flexAction": "reversal",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "ccAccountNum": "603571000000000000"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "industryType": "EC",
                      "txRefNum": ""
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/giftCardResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/giftcard-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/inquiry": {
      "parameters": null,
      "post": {
        "summary": "Retrieve a payment",
        "description": "Used to obtain response details of a transaction that has already been performed",
        "operationId": "inquiry",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Inquiry transaction information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/inquiryRequest"
              },
              "examples": {
                "Inquiry": {
                  "summary": "An example of an inquiry transaction",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "123456",
                      "inquiryRetryNumber": "123901"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inquiryResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/inquiry-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/accountupdater": {
      "parameters": null,
      "post": {
        "summary": "Update card details for existing profiles",
        "description": "Used to update outdated credit card information in profiles",
        "operationId": "accountupdater",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Account updater request information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/accountUpdaterRequest"
              },
              "examples": {
                "Account Updater": {
                  "summary": "An example of an account updater request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001"
                    },
                    "profile": {
                      "customerRefNum": "12345678",
                      "customerProfileAction": "AU",
                      "scheduledDate": "06062022"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accountUpdaterResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/accountupdater-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/fraudanalysis": {
      "parameters": null,
      "post": {
        "summary": "Submit a fraud analysis request",
        "description": "Sends a fraud analysis request to the Safetech service",
        "operationId": "fraudanalysis",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Fraud analysis request information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/fraudAnalysisRequest"
              },
              "examples": {
                "Fraud Analysis": {
                  "summary": "An example of a fraud analysis request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "order": {
                      "orderID": "12345678901234567890",
                      "industryType": "RC",
                      "amount": "1000"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "MC",
                        "ccAccountNum": "5454545454545454",
                        "ccExp": "202206"
                      }
                    },
                    "fraudAnalysis": {
                      "fraudScoreIndicator": "2",
                      "safetechMerchantID": "123456",
                      "websiteShortName": null,
                      "cashValueOfFencibleItems": "10000",
                      "customerGender": "M",
                      "customerDriverLicense": "DL1234567891",
                      "customerIDCreationTime": null
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FraudAnalysisResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/fraudanalysis-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/emvhostparametersdownload": {
      "parameters": null,
      "post": {
        "summary": "Download the latest EMV parameters from the Orbital Gateway",
        "description": "Returns EMV parameters used to update a secure pin entry device",
        "operationId": "emvhostparametersdownload",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "EMV parameter download request details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eMVHostParametersDownloadRequest"
              },
              "examples": {
                "EMV Host Parameters Download": {
                  "summary": "An example of an EMV parameters download request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000002",
                      "terminalID": "001"
                    },
                    "emvParameterDownloadDate": null,
                    "returnEmvDownloadDate": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eMVHostParametersDownloadResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/emvhostparametersdownload-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/token": {
      "parameters": null,
      "post": {
        "summary": "Retrieve tokenized card number",
        "description": "Returns a tokenized vesion of the card number sent in the request",
        "operationId": "token",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          }
        ],
        "requestBody": {
          "description": "Token service request details",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tokenRequest"
              },
              "examples": {
                "Get Token from Card": {
                  "summary": "An example of a token service request",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "444444HZYFLT4448",
                        "ccExp": "202506"
                      }
                    },
                    "order": {
                      "orderID": "123456",
                      "currencyCode": "840"
                    },
                    "token": {
                      "actionCode": "TK"
                    }
                  }
                },
                "Get Token from Safetech Page Encryption": {
                  "summary": "Get Token Token from Safetech Page Encryption",
                  "value": {
                    "version": "4.7",
                    "merchant": {
                      "bin": "000001",
                      "terminalID": "001"
                    },
                    "paymentInstrument": {
                      "card": {
                        "cardBrand": "VI",
                        "ccAccountNum": "4444444444444448"
                      }
                    },
                    "order": {
                      "orderID": "tk100",
                      "currencyCode": "840"
                    },
                    "token": {
                      "actionCode": "TK"
                    },
                    "pageEncryption": {
                      "pieSubscriberID": "123456789123",
                      "pieFormatID": "64",
                      "pieIntegrityCheck": "6f05017249e50250",
                      "pieKeyID": "3224dfa5",
                      "piePhaseID": "0",
                      "pieMode": "FPE"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tokenResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/token-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    },
    "/transactionstatus/version/{version}/txrefnum/{txrefnum}/bin/{bin}/terminalid/{terminalID}": {
      "parameters": null,
      "get": {
        "summary": "Retrieve transaction status details",
        "description": "Used to retrieve a transaction status information",
        "operationId": "transactionstatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/orbitalConnectionUsername"
          },
          {
            "$ref": "#/components/parameters/orbitalConnectionPassword"
          },
          {
            "$ref": "#/components/parameters/merchantID"
          },
          {
            "name": "version",
            "description": "version",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "txrefnum",
            "description": "txrefnum",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "bin",
            "description": "bin",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "terminalid",
            "description": "terminal id",
            "type": "string",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/transactionStatusResponse"
                },
                "examples": {
                  "$ref": "#/components/examples/transactionstatus-success"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: SSL Connection Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "408": {
            "description": "Request Timed Out",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "412": {
            "description": "Precondition Failed: Security Information is missing",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "502": {
            "description": "Connection Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          },
          "503": {
            "description": "Server Unavailable: Please Try Again Later",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messages"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "orbitalConnectionUsername": {
        "name": "orbitalConnectionUsername",
        "description": "Authentication User",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "orbitalConnectionPassword": {
        "name": "orbitalConnectionPassword",
        "description": "Authentication Password",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "merchantID": {
        "name": "merchantID",
        "description": "Merchant ID",
        "in": "header",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "content-type": {
        "name": "Content-Type",
        "in": "header",
        "required": true,
        "default": "application/json",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "accountUpdaterRequest": {
        "description": "account updater request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          }
        }
      },
      "accountUpdaterResponse": {
        "description": "account updater response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          }
        }
      },
      "captureRequest": {
        "description": "capture request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "softDesc": {
            "$ref": "#/components/schemas/softDesc"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "level2": {
            "$ref": "#/components/schemas/level2"
          },
          "level3": {
            "$ref": "#/components/schemas/level3"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "additionalAuthInfo": {
            "$ref": "#/components/schemas/additionalAuthInfo"
          },
          "strongCustomerAuthenticationExemption": {
            "$ref": "#/components/schemas/strongCustomerAuthenticationExemption"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "captureResponse": {
        "description": "capture response body",
        "type": "object",
        "properties": {
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          }
        }
      },
      "settleRequest": {
        "description": "settle request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "batch": {
            "$ref": "#/components/schemas/batch"
          }
        }
      },
      "settleResponse": {
        "description": "settle response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "batch": {
            "$ref": "#/components/schemas/batch"
          }
        }
      },
      "eMVHostParametersDownloadRequest": {
        "description": "emv host parameters download request",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "emvParameterDownloadDate": {
            "$ref": "#/components/schemas/emvParameterDownloadDate"
          },
          "returnEmvDownloadDate": {
            "$ref": "#/components/schemas/returnEmvDownloadDate"
          }
        }
      },
      "eMVHostParametersDownloadResponse": {
        "description": "emv host parameters download response",
        "type": "object",
        "properties": {
          "emvDownloadDate": {
            "$ref": "#/components/schemas/emvDownloadDate"
          },
          "pEMVProviderLineItem": {
            "$ref": "#/components/schemas/pEMVProviderLineItem"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          }
        }
      },
      "giftCardRequest": {
        "description": "gift card request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "flexAction": {
            "$ref": "#/components/schemas/flexAction"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "additionalAuthInfo": {
            "$ref": "#/components/schemas/additionalAuthInfo"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "avsDest": {
            "$ref": "#/components/schemas/avsDest"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "additionalCustomerInfo": {
            "$ref": "#/components/schemas/additionalCustomerInfo"
          },
          "level2": {
            "$ref": "#/components/schemas/level2"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "encrypted": {
            "$ref": "#/components/schemas/encrypted"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "giftCardResponse": {
        "description": "gift card response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "flexAction": {
            "$ref": "#/components/schemas/flexAction"
          },
          "autoAuthFlexAction": {
            "$ref": "#/components/schemas/autoAuthFlexAction"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          }
        }
      },
      "inquiryRequest": {
        "description": "inquiry request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          }
        }
      },
      "inquiryResponse": {
        "description": "inquiry response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "transType": {
            "$ref": "#/components/schemas/transType"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "cardTypeIndicator": {
            "$ref": "#/components/schemas/cardTypeIndicator"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "giftCard": {
            "$ref": "#/components/schemas/giftCard"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          }
        }
      },
      "paymentsRequest": {
        "type": "object",
        "description": "payments request body",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "transType": {
            "$ref": "#/components/schemas/transType"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "softDesc": {
            "$ref": "#/components/schemas/softDesc"
          },
          "softMerchantDescriptors": {
            "$ref": "#/components/schemas/softMerchantDescriptors"
          },
          "alternativePaymentMethod": {
            "$ref": "#/components/schemas/alternativePaymentMethod"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "targetCardBrand": {
            "$ref": "#/components/schemas/targetCardBrand"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "avsDest": {
            "$ref": "#/components/schemas/avsDest"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          },
          "level2": {
            "$ref": "#/components/schemas/level2"
          },
          "level3": {
            "$ref": "#/components/schemas/level3"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "digitalWallet": {
            "$ref": "#/components/schemas/digitalWallet"
          },
          "primaryRecipient": {
            "$ref": "#/components/schemas/primaryRecipient"
          },
          "earlyWarningSystem": {
            "$ref": "#/components/schemas/earlyWarningSystem"
          },
          "foreignExchange": {
            "$ref": "#/components/schemas/foreignExchange"
          },
          "merchantInitiatedTransaction": {
            "$ref": "#/components/schemas/merchantInitiatedTransaction"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "pageEncryption": {
            "$ref": "#/components/schemas/pageEncryption"
          },
          "strongCustomerAuthenticationExemption": {
            "$ref": "#/components/schemas/strongCustomerAuthenticationExemption"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "emvInfo": {
            "$ref": "#/components/schemas/emvInfo"
          },
          "additionalAuthInfo": {
            "$ref": "#/components/schemas/additionalAuthInfo"
          },
          "additionalCustomerInfo": {
            "$ref": "#/components/schemas/additionalCustomerInfo"
          },
          "healthBenefit": {
            "$ref": "#/components/schemas/healthBenefit"
          },
          "travelTicketAndPassengerInfo": {
            "$ref": "#/components/schemas/travelTicketAndPassengerInfo"
          },
          "travelFareDetail": {
            "$ref": "#/components/schemas/travelFareDetail"
          },
          "cruiseTravelDetails": {
            "$ref": "#/components/schemas/cruiseTravelDetails"
          },
          "passengerTransportTripLegs": {
            "$ref": "#/components/schemas/passengerTransportTripLegs"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "paymentsResponse": {
        "description": "payments response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "transType": {
            "$ref": "#/components/schemas/transType"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "emvInfo": {
            "$ref": "#/components/schemas/emvInfo"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "cardTypeIndicator": {
            "$ref": "#/components/schemas/cardTypeIndicator"
          },
          "earlyWarningSystem": {
            "$ref": "#/components/schemas/earlyWarningSystem"
          },
          "foreignExchange": {
            "$ref": "#/components/schemas/foreignExchange"
          },
          "realTimeAccountUpdater": {
            "$ref": "#/components/schemas/realTimeAccountUpdater"
          },
          "giftCard": {
            "$ref": "#/components/schemas/giftCard"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          },
          "alternativePaymentMethod": {
            "$ref": "#/components/schemas/alternativePaymentMethodResponse"
          }
        }
      },
      "refundRequest": {
        "description": "refund request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "transType": {
            "$ref": "#/components/schemas/transType"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "softDesc": {
            "$ref": "#/components/schemas/softDesc"
          },
          "softMerchantDescriptors": {
            "$ref": "#/components/schemas/softMerchantDescriptors"
          },
          "alternativePaymentMethod": {
            "$ref": "#/components/schemas/alternativePaymentMethod"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "avsDest": {
            "$ref": "#/components/schemas/avsDest"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          },
          "level2": {
            "$ref": "#/components/schemas/level2"
          },
          "level3": {
            "$ref": "#/components/schemas/level3"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "digitalWallet": {
            "$ref": "#/components/schemas/digitalWallet"
          },
          "primaryRecipient": {
            "$ref": "#/components/schemas/primaryRecipient"
          },
          "earlyWarningSystem": {
            "$ref": "#/components/schemas/earlyWarningSystem"
          },
          "foreignExchange": {
            "$ref": "#/components/schemas/foreignExchange"
          },
          "merchantInitiatedTransaction": {
            "$ref": "#/components/schemas/merchantInitiatedTransaction"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "pageEncryption": {
            "$ref": "#/components/schemas/pageEncryption"
          },
          "strongCustomerAuthenticationExemption": {
            "$ref": "#/components/schemas/strongCustomerAuthenticationExemption"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "emvInfo": {
            "$ref": "#/components/schemas/emvInfo"
          },
          "additionalAuthInfo": {
            "$ref": "#/components/schemas/additionalAuthInfo"
          },
          "additionalCustomerInfo": {
            "$ref": "#/components/schemas/additionalCustomerInfo"
          },
          "healthBenefit": {
            "$ref": "#/components/schemas/healthBenefit"
          },
          "travelTicketAndPassengerInfo": {
            "$ref": "#/components/schemas/travelTicketAndPassengerInfo"
          },
          "travelFareDetail": {
            "$ref": "#/components/schemas/travelFareDetail"
          },
          "cruiseTravelDetails": {
            "$ref": "#/components/schemas/cruiseTravelDetails"
          },
          "passengerTransportTripLegs": {
            "$ref": "#/components/schemas/passengerTransportTripLegs"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "refundResponse": {
        "description": "refund response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "transType": {
            "$ref": "#/components/schemas/transType"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "alternativePaymentMethod": {
            "$ref": "#/components/schemas/alternativePaymentMethod"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "emvInfo": {
            "$ref": "#/components/schemas/emvInfo"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "cardTypeIndicator": {
            "$ref": "#/components/schemas/cardTypeIndicator"
          },
          "earlyWarningSystem": {
            "$ref": "#/components/schemas/earlyWarningSystem"
          },
          "foreignExchange": {
            "$ref": "#/components/schemas/foreignExchange"
          },
          "realTimeAccountUpdater": {
            "$ref": "#/components/schemas/realTimeAccountUpdater"
          },
          "giftCard": {
            "$ref": "#/components/schemas/giftCard"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          }
        }
      },
      "profileAddRequest": {
        "description": "profile add request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "softDesc": {
            "$ref": "#/components/schemas/softDesc"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "merchantInitiatedTransaction": {
            "$ref": "#/components/schemas/merchantInitiatedTransaction"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "profileChangeRequest": {
        "description": "profile change request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "softDesc": {
            "$ref": "#/components/schemas/softDesc"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "profileDeleteRequest": {
        "description": "profile delete request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          }
        }
      },
      "profileResponse": {
        "description": "profile response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "softDesc": {
            "$ref": "#/components/schemas/softDesc"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "managedBilling": {
            "$ref": "#/components/schemas/managedBilling"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "merchantInitiatedTransaction": {
            "$ref": "#/components/schemas/merchantInitiatedTransaction"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        }
      },
      "reversalRequest": {
        "description": "reversal request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/cryptogram"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "reversalResponse": {
        "description": "reversal response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "emvInfo": {
            "$ref": "#/components/schemas/emvInfo"
          }
        }
      },
      "fraudAnalysisRequest": {
        "description": "fraud analysis request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "avsBilling": {
            "$ref": "#/components/schemas/avsBilling"
          },
          "avsDest": {
            "$ref": "#/components/schemas/avsDest"
          },
          "additionalAuthInfo": {
            "$ref": "#/components/schemas/additionalAuthInfo"
          },
          "cryptogram": {
            "$ref": "#/components/schemas/Cryptogram"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "additionalCustomerInfo": {
            "$ref": "#/components/schemas/additionalCustomerInfo"
          },
          "digitalWallet": {
            "$ref": "#/components/schemas/digitalWallet"
          },
          "pageEncryption": {
            "$ref": "#/components/schemas/pageEncryption"
          },
          "debit": {
            "$ref": "#/components/schemas/debit"
          },
          "fraudAnalysis": {
            "$ref": "#/components/schemas/fraudAnalysis"
          },
          "cardPresent": {
            "$ref": "#/components/schemas/cardPresent"
          }
        }
      },
      "fraudAnalysisResponse": {
        "description": "fraud analysis response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "profile": {
            "$ref": "#/components/schemas/profile"
          },
          "fraudAnalysisResponse": {
            "$ref": "#/components/schemas/fraudAnalysisResponse"
          }
        }
      },
      "tokenRequest": {
        "description": "token request body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "cardholderVerification": {
            "$ref": "#/components/schemas/cardholderVerification"
          },
          "pageEncryption": {
            "$ref": "#/components/schemas/pageEncryption"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        }
      },
      "tokenResponse": {
        "description": "token response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "paymentInstrument": {
            "$ref": "#/components/schemas/paymentInstrument"
          },
          "token": {
            "$ref": "#/components/schemas/token"
          }
        }
      },
      "transactionStatusResponse": {
        "description": "transaction status response body",
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/version"
          },
          "merchant": {
            "$ref": "#/components/schemas/merchant"
          },
          "order": {
            "$ref": "#/components/schemas/order"
          },
          "alternativePaymentMethod": {
            "$ref": "#/components/schemas/alternativePaymentMethodResponse"
          }
        }
      },
      "additionalAuthInfo": {
        "type": "object",
        "properties": {
          "authenticationECIInd": {
            "$ref": "#/components/schemas/authenticationECIInd"
          },
          "deferredAuth": {
            "$ref": "#/components/schemas/deferredAuth"
          },
          "recurringInd": {
            "$ref": "#/components/schemas/recurringInd"
          },
          "paymentInd": {
            "$ref": "#/components/schemas/paymentInd"
          },
          "cardIndicators": {
            "$ref": "#/components/schemas/cardIndicators"
          },
          "paymentActionInd": {
            "$ref": "#/components/schemas/paymentActionInd"
          },
          "rtauOptOutInd": {
            "$ref": "#/components/schemas/rtauOptOutInd"
          },
          "pymtBrandProgramCode": {
            "$ref": "#/components/schemas/pymtBrandProgramCode"
          },
          "mcProgramProtocol": {
            "$ref": "#/components/schemas/mcProgramProtocol"
          },
          "mcDirectoryTransID": {
            "$ref": "#/components/schemas/mcDirectoryTransID"
          },
          "ucafInd": {
            "$ref": "#/components/schemas/ucafInd"
          },
          "partialAuthInd": {
            "$ref": "#/components/schemas/partialAuthInd"
          },
          "activationCount": {
            "$ref": "#/components/schemas/activationCount"
          },
          "flexAutoAuthInd": {
            "$ref": "#/components/schemas/flexAutoAuthInd"
          },
          "flexPartialRedemptionInd": {
            "$ref": "#/components/schemas/flexPartialRedemptionInd"
          },
          "retailTransInfo": {
            "$ref": "#/components/schemas/retailTransInfo"
          },
          "employeeNumber": {
            "$ref": "#/components/schemas/employeeNumber"
          }
        }
      },
      "additionalCustomerInfo": {
        "type": "object",
        "properties": {
          "customerAni": {
            "$ref": "#/components/schemas/customerAni"
          },
          "customerIpAddress": {
            "$ref": "#/components/schemas/customerIpAddress"
          },
          "emailAddressSubtype": {
            "$ref": "#/components/schemas/emailAddressSubtype"
          },
          "customerBrowserName": {
            "$ref": "#/components/schemas/customerBrowserName"
          }
        }
      },
      "alternativePaymentMethod": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          },
          "customerCurrencyCode": {
            "$ref": "#/components/schemas/customerCurrencyCode"
          },
          "customerCountryCode": {
            "$ref": "#/components/schemas/customerCountryCode"
          },
          "customerPreferredLanguage": {
            "$ref": "#/components/schemas/customerPreferredLanguage"
          },
          "shopperFirstName": {
            "$ref": "#/components/schemas/shopperFirstName"
          },
          "shopperLastName": {
            "$ref": "#/components/schemas/shopperLastName"
          },
          "shopperEmail": {
            "$ref": "#/components/schemas/shopperEmail"
          },
          "merchantRedirectURL": {
            "$ref": "#/components/schemas/merchantRedirectURL"
          },
          "customerLocale": {
            "$ref": "#/components/schemas/customerLocale"
          },
          "dynamicDescriptor": {
            "$ref": "#/components/schemas/dynamicDescriptor"
          },
          "shipping": {
            "$ref": "#/components/schemas/shipping"
          },
          "billing": {
            "$ref": "#/components/schemas/billing"
          },
          "orderItems": {
            "$ref": "#/components/schemas/orderItems"
          }
        }
      },
      "shipping": {
        "type": "object",
        "properties": {
          "firstName": {
            "$ref": "#/components/schemas/firstName"
          },
          "lastName": {
            "$ref": "#/components/schemas/lastName"
          },
          "address1": {
            "$ref": "#/components/schemas/address1"
          },
          "address2": {
            "$ref": "#/components/schemas/address2"
          },
          "postalCode": {
            "$ref": "#/components/schemas/postalCode"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode"
          },
          "state": {
            "$ref": "#/components/schemas/state"
          },
          "city": {
            "$ref": "#/components/schemas/city"
          },
          "isShippingRequired": {
            "$ref": "#/components/schemas/isShippingRequired"
          }
        }
      },
      "billing": {
        "type": "object",
        "properties": {
          "altmopBillingFirstName": {
            "$ref": "#/components/schemas/altmopBillingFirstName"
          },
          "altmopBillingLastName": {
            "$ref": "#/components/schemas/altmopBillingLastName"
          },
          "altmopBillingAddress1": {
            "$ref": "#/components/schemas/altmopBillingAddress1"
          },
          "altmopBillingAddress2": {
            "$ref": "#/components/schemas/altmopBillingAddress2"
          },
          "altmopBillingPostalCode": {
            "$ref": "#/components/schemas/altmopBillingPostalCode"
          },
          "altmopBillingCity": {
            "$ref": "#/components/schemas/altmopBillingCity"
          },
          "altmopBillingState": {
            "$ref": "#/components/schemas/altmopBillingState"
          },
          "altmopBillingCountryCode": {
            "$ref": "#/components/schemas/altmopBillingCountryCode"
          }
        }
      },
      "alternativePaymentMethodResponse": {
        "type": "object",
        "properties": {
          "paymentMethod": {
            "type": "string"
          },
          "hostTxRefNum": {
            "$ref": "#/components/schemas/hostTxRefNum"
          },
          "redirectURL": {
            "$ref": "#/components/schemas/redirectURL"
          },
          "redirectSecret": {
            "$ref": "#/components/schemas/redirectSecret"
          },
          "minAmt": {
            "$ref": "#/components/schemas/minAmt"
          },
          "maxAmt": {
            "$ref": "#/components/schemas/maxAmt"
          }
        }
      },
      "avsBilling": {
        "type": "object",
        "properties": {
          "avsZip": {
            "$ref": "#/components/schemas/avsZip"
          },
          "avsAddress1": {
            "$ref": "#/components/schemas/avsAddress1"
          },
          "avsAddress2": {
            "$ref": "#/components/schemas/avsAddress2"
          },
          "avsCity": {
            "$ref": "#/components/schemas/avsCity"
          },
          "avsState": {
            "$ref": "#/components/schemas/avsState"
          },
          "avsPhone": {
            "$ref": "#/components/schemas/avsPhone"
          },
          "avsPhoneType": {
            "$ref": "#/components/schemas/avsPhoneType"
          },
          "avsName": {
            "$ref": "#/components/schemas/avsName"
          },
          "avsCountryCode": {
            "$ref": "#/components/schemas/avsCountryCode"
          },
          "avsRespCode": {
            "$ref": "#/components/schemas/avsRespCode"
          },
          "hostAVSRespCode": {
            "$ref": "#/components/schemas/hostAVSRespCode"
          }
        }
      },
      "avsDest": {
        "type": "object",
        "properties": {
          "avsDestZip": {
            "$ref": "#/components/schemas/avsDestZip"
          },
          "avsDestAddress1": {
            "$ref": "#/components/schemas/avsDestAddress1"
          },
          "avsDestAddress2": {
            "$ref": "#/components/schemas/avsDestAddress2"
          },
          "avsDestCity": {
            "$ref": "#/components/schemas/avsDestCity"
          },
          "avsDestState": {
            "$ref": "#/components/schemas/avsDestState"
          },
          "avsDestPhoneNum": {
            "$ref": "#/components/schemas/avsDestPhoneNum"
          },
          "avsDestPhoneType": {
            "$ref": "#/components/schemas/avsDestPhoneType"
          },
          "avsDestName": {
            "$ref": "#/components/schemas/avsDestName"
          },
          "avsDestCountryCode": {
            "$ref": "#/components/schemas/avsDestCountryCode"
          }
        }
      },
      "batch": {
        "type": "object",
        "properties": {
          "settleRejectedHoldingBin": {
            "$ref": "#/components/schemas/settleRejectedHoldingBin"
          },
          "batchSeqNum": {
            "$ref": "#/components/schemas/batchSeqNum"
          }
        }
      },
      "card": {
        "type": "object",
        "properties": {
          "cardBrand": {
            "$ref": "#/components/schemas/cardBrand"
          },
          "ccAccountNum": {
            "$ref": "#/components/schemas/ccAccountNum"
          },
          "magStripeTrack1": {
            "$ref": "#/components/schemas/magStripeTrack1"
          },
          "magStripeTrack2": {
            "$ref": "#/components/schemas/magStripeTrack2"
          },
          "dpanInd": {
            "$ref": "#/components/schemas/dpanInd"
          },
          "tokenTxnType": {
            "$ref": "#/components/schemas/tokenTxnType"
          },
          "ccExp": {
            "$ref": "#/components/schemas/ccExp"
          },
          "dpanAccountStatus": {
            "$ref": "#/components/schemas/dpanAccountStatus"
          },
          "safetechToken": {
            "$ref": "#/components/schemas/safetechToken"
          },
          "cardType": {
            "$ref": "#/components/schemas/cardType"
          },
          "startAccountNum": {
            "$ref": "#/components/schemas/startAccountNum"
          },
          "healthBenefitCardInd": {
            "$ref": "#/components/schemas/healthBenefitCardInd"
          }
        }
      },
      "cardholderVerification": {
        "type": "object",
        "properties": {
          "ccCardVerifyPresenceInd": {
            "$ref": "#/components/schemas/ccCardVerifyPresenceInd"
          },
          "ccCardVerifyNum": {
            "$ref": "#/components/schemas/ccCardVerifyNum"
          },
          "cvvRespCode": {
            "$ref": "#/components/schemas/cvvRespCode"
          },
          "hostCVVRespCode": {
            "$ref": "#/components/schemas/hostCVVRespCode"
          }
        }
      },
      "cardTypeIndicator": {
        "type": "object",
        "properties": {
          "ctiAffluentCard": {
            "$ref": "#/components/schemas/ctiAffluentCard"
          },
          "ctiCommercialCard": {
            "$ref": "#/components/schemas/ctiCommercialCard"
          },
          "ctiDurbinExemption": {
            "$ref": "#/components/schemas/ctiDurbinExemption"
          },
          "ctiHealthcareCard": {
            "$ref": "#/components/schemas/ctiHealthcareCard"
          },
          "ctiLevel3Eligible": {
            "$ref": "#/components/schemas/ctiLevel3Eligible"
          },
          "ctiPayrollCard": {
            "$ref": "#/components/schemas/ctiPayrollCard"
          },
          "ctiPrepaidCard": {
            "$ref": "#/components/schemas/ctiPrepaidCard"
          },
          "ctiPINlessDebitCard": {
            "$ref": "#/components/schemas/ctiPINlessDebitCard"
          },
          "ctiSignatureDebitCard": {
            "$ref": "#/components/schemas/ctiSignatureDebitCard"
          },
          "ctiIssuingCountry": {
            "$ref": "#/components/schemas/ctiIssuingCountry"
          },
          "ctiPrepaidReloadableCard": {
            "$ref": "#/components/schemas/ctiPrepaidReloadableCard"
          }
        }
      },
      "cardPresent": {
        "type": "object",
        "properties": {
          "cpEncrypted": {
            "$ref": "#/components/schemas/cpEncrypted"
          },
          "cpNonEncrypted": {
            "$ref": "#/components/schemas/cpNonEncrypted"
          },
          "emvInfo": {
            "$ref": "#/components/schemas/emvInfo"
          },
          "cpDebit": {
            "$ref": "#/components/schemas/cpDebit"
          }
        }
      },
      "cpEncrypted": {
        "type": "object",
        "properties": {
          "encryptedPan": {
            "$ref": "#/components/schemas/encryptedPan"
          },
          "encryptedPanMethod": {
            "$ref": "#/components/schemas/encryptedPanMethod"
          },
          "encryptedPanKey": {
            "$ref": "#/components/schemas/encryptedPanKey"
          },
          "encryptedPanPublicKeyFingerPrint": {
            "$ref": "#/components/schemas/encryptedPanPublicKeyFingerPrint"
          },
          "encryptedPanHash": {
            "$ref": "#/components/schemas/encryptedPanHash"
          },
          "encryptedMagStripeTrack2": {
            "$ref": "#/components/schemas/encryptedMagStripeTrack2"
          },
          "encryptionInd": {
            "$ref": "#/components/schemas/encryptionInd"
          },
          "encryptionMethod": {
            "$ref": "#/components/schemas/encryptionMethod"
          },
          "encryptionId": {
            "$ref": "#/components/schemas/encryptionId"
          }
        }
      },
      "cpNonEncrypted": {
        "type": "object",
        "properties": {
          "magStripeTrack1": {
            "$ref": "#/components/schemas/magStripeTrack1"
          },
          "magStripeTrack2": {
            "$ref": "#/components/schemas/magStripeTrack2"
          }
        }
      },
      "cpDebit": {
        "type": "object",
        "properties": {
          "pin": {
            "$ref": "#/components/schemas/pin"
          },
          "pinKeySerialNumber": {
            "$ref": "#/components/schemas/pinKeySerialNumber"
          }
        }
      },
      "cruiseTravelDetails": {
        "type": "object",
        "properties": {
          "tAADepartureDate": {
            "$ref": "#/components/schemas/tAADepartureDate"
          },
          "tAAReturnDate": {
            "$ref": "#/components/schemas/tAAReturnDate"
          },
          "tAATotalCost": {
            "$ref": "#/components/schemas/tAATotalCost"
          },
          "tAACruiseDuration": {
            "$ref": "#/components/schemas/tAACruiseDuration"
          },
          "tAAShipName": {
            "$ref": "#/components/schemas/tAAShipName"
          },
          "tAARegionCode": {
            "$ref": "#/components/schemas/tAARegionCode"
          },
          "tAACountryCode": {
            "$ref": "#/components/schemas/tAACountryCode"
          },
          "tAACityName": {
            "$ref": "#/components/schemas/tAACityName"
          }
        }
      },
      "cryptogram": {
        "type": "object",
        "properties": {
          "digitalTokenCryptogram": {
            "$ref": "#/components/schemas/digitalTokenCryptogram"
          },
          "verifyByVisaCAVV": {
            "$ref": "#/components/schemas/verifyByVisaCAVV"
          },
          "verifyByVisaXID": {
            "$ref": "#/components/schemas/verifyByVisaXID"
          },
          "dsrpCryptogram": {
            "$ref": "#/components/schemas/dsrpCryptogram"
          },
          "useStoredAAVInd": {
            "$ref": "#/components/schemas/useStoredAAVInd"
          },
          "mcSecureCodeAAV": {
            "$ref": "#/components/schemas/mcSecureCodeAAV"
          }
        }
      },
      "debit": {
        "type": "object",
        "properties": {
          "pin": {
            "$ref": "#/components/schemas/pin"
          },
          "pinKeySerialNumber": {
            "$ref": "#/components/schemas/pinKeySerialNumber"
          },
          "debitPinCashBack": {
            "$ref": "#/components/schemas/debitPinCashBack"
          },
          "pinlessDebitTxnType": {
            "$ref": "#/components/schemas/pinlessDebitTxnType"
          },
          "pinlessDebitMerchantUrl": {
            "$ref": "#/components/schemas/pinlessDebitMerchantUrl"
          },
          "debitBillerReferenceNumber": {
            "$ref": "#/components/schemas/debitBillerReferenceNumber"
          },
          "debitPinSurchargeAmount": {
            "$ref": "#/components/schemas/debitPinSurchargeAmount"
          },
          "debitPinTraceNumber": {
            "$ref": "#/components/schemas/debitPinTraceNumber"
          },
          "debitPinNetworkID": {
            "$ref": "#/components/schemas/debitPinNetworkID"
          },
          "pinlessDebitTotalShpmnt": {
            "$ref": "#/components/schemas/pinlessDebitTotalShpmnt"
          },
          "debitRoutingNetwork": {
            "$ref": "#/components/schemas/debitRoutingNetwork"
          }
        }
      },
      "digitalWallet": {
        "type": "object",
        "properties": {
          "dwWalletID": {
            "$ref": "#/components/schemas/dwWalletID"
          },
          "dwSLI": {
            "$ref": "#/components/schemas/dwSLI"
          },
          "dwIncentiveInd": {
            "$ref": "#/components/schemas/dwIncentiveInd"
          },
          "digitalWalletType": {
            "$ref": "#/components/schemas/digitalWalletType"
          }
        }
      },
      "earlyWarningSystem": {
        "type": "object",
        "properties": {
          "ewsFirstName": {
            "$ref": "#/components/schemas/ewsFirstName"
          },
          "ewsMiddleName": {
            "$ref": "#/components/schemas/ewsMiddleName"
          },
          "ewsLastName": {
            "$ref": "#/components/schemas/ewsLastName"
          },
          "ewsBusinessName": {
            "$ref": "#/components/schemas/ewsBusinessName"
          },
          "ewsAddressLine1": {
            "$ref": "#/components/schemas/ewsAddressLine1"
          },
          "ewsAddressLine2": {
            "$ref": "#/components/schemas/ewsAddressLine2"
          },
          "ewsCity": {
            "$ref": "#/components/schemas/ewsCity"
          },
          "ewsState": {
            "$ref": "#/components/schemas/ewsState"
          },
          "ewsZip": {
            "$ref": "#/components/schemas/ewsZip"
          },
          "ewsPhoneType": {
            "$ref": "#/components/schemas/ewsPhoneType"
          },
          "ewsPhoneNumber": {
            "$ref": "#/components/schemas/ewsPhoneNumber"
          },
          "ewsCheckSerialNumber": {
            "$ref": "#/components/schemas/ewsCheckSerialNumber"
          },
          "ewsSSNTIN": {
            "$ref": "#/components/schemas/ewsSSNTIN"
          },
          "ewsDOB": {
            "$ref": "#/components/schemas/ewsDOB"
          },
          "ewsIDType": {
            "$ref": "#/components/schemas/ewsIDType"
          },
          "ewsIDNumber": {
            "$ref": "#/components/schemas/ewsIDNumber"
          },
          "ewsIDState": {
            "$ref": "#/components/schemas/ewsIDState"
          },
          "ewsAccountStatusCode": {
            "$ref": "#/components/schemas/ewsAccountStatusCode"
          },
          "ewsAOAConditionCode": {
            "$ref": "#/components/schemas/ewsAOAConditionCode"
          },
          "ewsNameMatch": {
            "$ref": "#/components/schemas/ewsNameMatch"
          },
          "ewsFirstNameMatch": {
            "$ref": "#/components/schemas/ewsFirstNameMatch"
          },
          "ewsMiddleNameMatch": {
            "$ref": "#/components/schemas/ewsMiddleNameMatch"
          },
          "ewsLastNameMatch": {
            "$ref": "#/components/schemas/ewsLastNameMatch"
          },
          "ewsBusinessNameMatch": {
            "$ref": "#/components/schemas/ewsBusinessNameMatch"
          },
          "ewsAddressMatch": {
            "$ref": "#/components/schemas/ewsAddressMatch"
          },
          "ewsCityMatch": {
            "$ref": "#/components/schemas/ewsCityMatch"
          },
          "ewsStateMatch": {
            "$ref": "#/components/schemas/ewsStateMatch"
          },
          "ewsZipMatch": {
            "$ref": "#/components/schemas/ewsZipMatch"
          },
          "ewsPhoneMatch": {
            "$ref": "#/components/schemas/ewsPhoneMatch"
          },
          "ewsSSNTINMatch": {
            "$ref": "#/components/schemas/ewsSSNTINMatch"
          },
          "ewsDOBMatch": {
            "$ref": "#/components/schemas/ewsDOBMatch"
          },
          "ewsIDTypeMatch": {
            "$ref": "#/components/schemas/ewsIDTypeMatch"
          },
          "ewsIDNumberMatch": {
            "$ref": "#/components/schemas/ewsIDNumberMatch"
          },
          "ewsIDStateMatch": {
            "$ref": "#/components/schemas/ewsIDStateMatch"
          },
          "avConsumerAccountDate": {
            "$ref": "#/components/schemas/avConsumerAccountDate"
          }
        }
      },
      "ecp": {
        "type": "object",
        "properties": {
          "ecpCheckRT": {
            "$ref": "#/components/schemas/ecpCheckRT"
          },
          "ecpCheckDDA": {
            "$ref": "#/components/schemas/ecpCheckDDA"
          },
          "ecpBankAcctType": {
            "$ref": "#/components/schemas/ecpBankAcctType"
          },
          "ecpAuthMethod": {
            "$ref": "#/components/schemas/ecpAuthMethod"
          },
          "ecpDelvMethod": {
            "$ref": "#/components/schemas/ecpDelvMethod"
          },
          "ecpActionCode": {
            "$ref": "#/components/schemas/ecpActionCode"
          },
          "ecpCheckSerialNumber": {
            "$ref": "#/components/schemas/ecpCheckSerialNumber"
          },
          "ecpTerminalCity": {
            "$ref": "#/components/schemas/ecpTerminalCity"
          },
          "ecpTerminalState": {
            "$ref": "#/components/schemas/ecpTerminalState"
          },
          "ecpImageReferenceNumber": {
            "$ref": "#/components/schemas/ecpImageReferenceNumber"
          },
          "ecpSameDayInd": {
            "$ref": "#/components/schemas/ecpSameDayInd"
          },
          "ecpReDepositFreq": {
            "$ref": "#/components/schemas/ecpReDepositFreq"
          },
          "ecpReDepositInd": {
            "$ref": "#/components/schemas/ecpReDepositInd"
          }
        }
      },
      "emvInfo": {
        "type": "object",
        "properties": {
          "posEntryMode": {
            "$ref": "#/components/schemas/posEntryMode"
          },
          "dataEntrySource": {
            "$ref": "#/components/schemas/dataEntrySource"
          },
          "panSequenceNumber": {
            "$ref": "#/components/schemas/panSequenceNumber"
          },
          "applicationId": {
            "$ref": "#/components/schemas/applicationId"
          },
          "applicationLabel": {
            "$ref": "#/components/schemas/applicationLabel"
          },
          "chipCardData": {
            "$ref": "#/components/schemas/chipCardData"
          },
          "tvr": {
            "$ref": "#/components/schemas/tvr"
          },
          "tsi": {
            "$ref": "#/components/schemas/tsi"
          },
          "attendedTerminal": {
            "$ref": "#/components/schemas/attendedTerminal"
          },
          "terminalLocation": {
            "$ref": "#/components/schemas/terminalLocation"
          },
          "cardholderPresent": {
            "$ref": "#/components/schemas/cardholderPresent"
          },
          "cardholderActivatedTerminal": {
            "$ref": "#/components/schemas/cardholderActivatedTerminal"
          },
          "terminalEntry": {
            "$ref": "#/components/schemas/terminalEntry"
          },
          "terminalLaneId": {
            "$ref": "#/components/schemas/terminalLaneId"
          },
          "latitudeLongitude": {
            "$ref": "#/components/schemas/latitudeLongitude"
          },
          "politicalTimeZone": {
            "$ref": "#/components/schemas/politicalTimeZone"
          },
          "vendorID": {
            "$ref": "#/components/schemas/vendorID"
          },
          "softwareID": {
            "$ref": "#/components/schemas/softwareID"
          },
          "mobileDeviceType": {
            "$ref": "#/components/schemas/mobileDeviceType"
          },
          "deviceID": {
            "$ref": "#/components/schemas/deviceID"
          },
          "localDateTime": {
            "$ref": "#/components/schemas/localDateTime"
          },
          "cardPresentInd": {
            "$ref": "#/components/schemas/cardPresentInd"
          },
          "readerSerialNumber": {
            "$ref": "#/components/schemas/readerSerialNumber"
          },
          "keySerialNumber": {
            "$ref": "#/components/schemas/keySerialNumber"
          },
          "industrySupport": {
            "$ref": "#/components/schemas/industrySupport"
          },
          "complianceClass": {
            "$ref": "#/components/schemas/complianceClass"
          },
          "deviceSecuritySupport": {
            "$ref": "#/components/schemas/deviceSecuritySupport"
          },
          "emvSupport": {
            "$ref": "#/components/schemas/emvSupport"
          },
          "peripheralSupport": {
            "$ref": "#/components/schemas/peripheralSupport"
          },
          "communicationSupport": {
            "$ref": "#/components/schemas/communicationSupport"
          }
        }
      },
      "encrypted": {
        "type": "object",
        "properties": {
          "encryptedMagStripeTrack2": {
            "$ref": "#/components/schemas/encryptedMagStripeTrack2"
          },
          "encryptionInd": {
            "$ref": "#/components/schemas/encryptionInd"
          },
          "encryptionMethod": {
            "$ref": "#/components/schemas/encryptionMethod"
          },
          "encryptionId": {
            "$ref": "#/components/schemas/encryptionId"
          }
        }
      },
      "eudd": {
        "type": "object",
        "properties": {
          "euddBankSortCode": {
            "$ref": "#/components/schemas/euddBankSortCode"
          },
          "euddCountryCode": {
            "$ref": "#/components/schemas/euddCountryCode"
          },
          "euddRibCode": {
            "$ref": "#/components/schemas/euddRibCode"
          },
          "euddBankBranchCode": {
            "$ref": "#/components/schemas/euddBankBranchCode"
          },
          "euddIBAN": {
            "$ref": "#/components/schemas/euddIBAN"
          },
          "euddBIC": {
            "$ref": "#/components/schemas/euddBIC"
          },
          "euddMandateSignatureDate": {
            "$ref": "#/components/schemas/euddMandateSignatureDate"
          },
          "euddMandateID": {
            "$ref": "#/components/schemas/euddMandateID"
          },
          "euddMandateType": {
            "$ref": "#/components/schemas/euddMandateType"
          }
        }
      },
      "foreignExchange": {
        "type": "object",
        "properties": {
          "fxOptOutInd": {
            "$ref": "#/components/schemas/fxOptOutInd"
          },
          "fxRateHandlingInd": {
            "$ref": "#/components/schemas/fxRateHandlingInd"
          },
          "fxRateID": {
            "$ref": "#/components/schemas/fxRateID"
          },
          "fxExchangeRate": {
            "$ref": "#/components/schemas/fxExchangeRate"
          },
          "fxPresentmentCurrency": {
            "$ref": "#/components/schemas/fxPresentmentCurrency"
          },
          "fxSettlementCurrency": {
            "$ref": "#/components/schemas/fxSettlementCurrency"
          },
          "fxDefaultRateInd": {
            "$ref": "#/components/schemas/fxDefaultRateInd"
          },
          "fxRateStatus": {
            "$ref": "#/components/schemas/fxRateStatus"
          }
        }
      },
      "fraudAnalysis": {
        "type": "object",
        "properties": {
          "fraudScoreIndicator": {
            "$ref": "#/components/schemas/fraudScoreIndicator"
          },
          "rulesTrigger": {
            "$ref": "#/components/schemas/rulesTrigger"
          },
          "safetechMerchantID": {
            "$ref": "#/components/schemas/safetechMerchantID"
          },
          "kaptchaSessionID": {
            "$ref": "#/components/schemas/kaptchaSessionID"
          },
          "websiteShortName": {
            "$ref": "#/components/schemas/websiteShortName"
          },
          "cashValueOfFencibleItems": {
            "$ref": "#/components/schemas/cashValueOfFencibleItems"
          },
          "customerDOB": {
            "$ref": "#/components/schemas/customerDOB"
          },
          "customerGender": {
            "$ref": "#/components/schemas/customerGender"
          },
          "customerDriverLicense": {
            "$ref": "#/components/schemas/customerDriverLicense"
          },
          "customerID": {
            "$ref": "#/components/schemas/customerID"
          },
          "customerIDCreationTime": {
            "$ref": "#/components/schemas/customerIDCreationTime"
          },
          "kttVersionNumber": {
            "$ref": "#/components/schemas/kttVersionNumber"
          },
          "kttDataLength": {
            "$ref": "#/components/schemas/kttDataLength"
          },
          "kttDataString": {
            "$ref": "#/components/schemas/kttDataString"
          },
          "fraudScoreProcStatus": {
            "$ref": "#/components/schemas/fraudScoreProcStatus"
          },
          "fraudScoreProcMsg": {
            "$ref": "#/components/schemas/fraudScoreProcMsg"
          },
          "fraudAnalysisResponse": {
            "$ref": "#/components/schemas/FraudAnalysisResponse"
          }
        }
      },
      "FraudAnalysisResponse": {
        "type": "object",
        "properties": {
          "fraudScoreIndicator": {
            "$ref": "#/components/schemas/fraudScoreIndicator"
          },
          "fraudStatusCode": {
            "$ref": "#/components/schemas/fraudStatusCode"
          },
          "riskInquiryTransactionID": {
            "$ref": "#/components/schemas/riskInquiryTransactionID"
          },
          "autoDecisionResponse": {
            "$ref": "#/components/schemas/autoDecisionResponse"
          },
          "riskScore": {
            "$ref": "#/components/schemas/riskScore"
          },
          "kaptchaMatchFlag": {
            "$ref": "#/components/schemas/kaptchaMatchFlag"
          },
          "worstCountry": {
            "$ref": "#/components/schemas/worstCountry"
          },
          "customerRegion": {
            "$ref": "#/components/schemas/customerRegion"
          },
          "paymentBrand": {
            "$ref": "#/components/schemas/paymentBrand"
          },
          "fourteenDayVelocity": {
            "$ref": "#/components/schemas/fourteenDayVelocity"
          },
          "sixHourVelocity": {
            "$ref": "#/components/schemas/sixHourVelocity"
          },
          "customerNetwork": {
            "$ref": "#/components/schemas/customerNetwork"
          },
          "numberOfDevices": {
            "$ref": "#/components/schemas/numberOfDevices"
          },
          "numberOfCards": {
            "$ref": "#/components/schemas/numberOfCards"
          },
          "numberOfEmails": {
            "$ref": "#/components/schemas/numberOfEmails"
          },
          "deviceLayers": {
            "$ref": "#/components/schemas/deviceLayers"
          },
          "deviceFingerprint": {
            "$ref": "#/components/schemas/deviceFingerprint"
          },
          "customerTimeZone": {
            "$ref": "#/components/schemas/customerTimeZone"
          },
          "customerLocalDateTime": {
            "$ref": "#/components/schemas/customerLocalDateTime"
          },
          "deviceRegion": {
            "$ref": "#/components/schemas/deviceRegion"
          },
          "deviceCountry": {
            "$ref": "#/components/schemas/deviceCountry"
          },
          "proxyStatus": {
            "$ref": "#/components/schemas/proxyStatus"
          },
          "javascriptStatus": {
            "$ref": "#/components/schemas/javascriptStatus"
          },
          "flashStatus": {
            "$ref": "#/components/schemas/flashStatus"
          },
          "cookiesStatus": {
            "$ref": "#/components/schemas/cookiesStatus"
          },
          "browserCountry": {
            "$ref": "#/components/schemas/browserCountry"
          },
          "browserLanguage": {
            "$ref": "#/components/schemas/browserLanguage"
          },
          "mobileDeviceIndicator": {
            "$ref": "#/components/schemas/mobileDeviceIndicator"
          },
          "mobileDeviceType": {
            "$ref": "#/components/schemas/mobileDeviceType"
          },
          "mobileWirelessIndicator": {
            "$ref": "#/components/schemas/mobileWirelessIndicator"
          },
          "voiceDevice": {
            "$ref": "#/components/schemas/voiceDevice"
          },
          "pcRemoteIndicator": {
            "$ref": "#/components/schemas/pcRemoteIndicator"
          },
          "rulesDataLength": {
            "$ref": "#/components/schemas/rulesDataLength"
          },
          "rulesData": {
            "$ref": "#/components/schemas/rulesData"
          }
        }
      },
      "giftCard": {
        "type": "object",
        "properties": {
          "giftCardInd": {
            "$ref": "#/components/schemas/giftCardInd"
          }
        }
      },
      "healthBenefit": {
        "type": "object",
        "properties": {
          "qhpAmt": {
            "$ref": "#/components/schemas/qhpAmt"
          },
          "rxAmt": {
            "$ref": "#/components/schemas/rxAmt"
          },
          "visionAmt": {
            "$ref": "#/components/schemas/visionAmt"
          },
          "clinicOtherAmt": {
            "$ref": "#/components/schemas/clinicOtherAmt"
          },
          "dentalAmt": {
            "$ref": "#/components/schemas/dentalAmt"
          },
          "iiasFlag": {
            "$ref": "#/components/schemas/iiasFlag"
          }
        }
      },
      "item": {
        "type": "object",
        "properties": {
          "pCard3DtlIndex": {
            "$ref": "#/components/schemas/pCard3DtlIndex"
          },
          "pCard3DtlDesc": {
            "$ref": "#/components/schemas/pCard3DtlDesc"
          },
          "pCard3DtlProdCd": {
            "$ref": "#/components/schemas/pCard3DtlProdCd"
          },
          "pCard3DtlQty": {
            "$ref": "#/components/schemas/pCard3DtlQty"
          },
          "pCard3DtlUOM": {
            "$ref": "#/components/schemas/pCard3DtlUOM"
          },
          "pCard3DtlTaxAmt": {
            "$ref": "#/components/schemas/pCard3DtlTaxAmt"
          },
          "pCard3DtlTaxRate": {
            "$ref": "#/components/schemas/pCard3DtlTaxRate"
          },
          "pCard3Dtllinetot": {
            "$ref": "#/components/schemas/pCard3Dtllinetot"
          },
          "pCard3DtlDisc": {
            "$ref": "#/components/schemas/pCard3DtlDisc"
          },
          "pCard3DtlCommCd": {
            "$ref": "#/components/schemas/pCard3DtlCommCd"
          },
          "pCard3DtlUnitCost": {
            "$ref": "#/components/schemas/pCard3DtlUnitCost"
          },
          "pCard3DtlGrossNet": {
            "$ref": "#/components/schemas/pCard3DtlGrossNet"
          },
          "pCard3DtlTaxType": {
            "$ref": "#/components/schemas/pCard3DtlTaxType"
          },
          "pCard3DtlDiscInd": {
            "$ref": "#/components/schemas/pCard3DtlDiscInd"
          },
          "pCard3DtlDebitInd": {
            "$ref": "#/components/schemas/pCard3DtlDebitInd"
          },
          "pCard3DtlDiscountRate": {
            "$ref": "#/components/schemas/pCard3DtlDiscountRate"
          },
          "pCard3DtlTaxAmt2": {
            "$ref": "#/components/schemas/pCard3DtlTaxAmt2"
          },
          "pCard3DtlTaxRate2": {
            "$ref": "#/components/schemas/pCard3DtlTaxRate2"
          },
          "pCard3DtlTaxType2": {
            "$ref": "#/components/schemas/pCard3DtlTaxType2"
          },
          "pCard3DtlDiscTreatmentCd": {
            "$ref": "#/components/schemas/pCard3DtlDiscTreatmentCd"
          },
          "pCard3DtlInd": {
            "$ref": "#/components/schemas/pCard3DtlInd"
          }
        }
      },
      "level2": {
        "type": "object",
        "properties": {
          "taxInd": {
            "$ref": "#/components/schemas/taxInd"
          },
          "taxAmount": {
            "$ref": "#/components/schemas/taxAmount"
          },
          "pCardOrderID": {
            "$ref": "#/components/schemas/pCardOrderID"
          },
          "pCardDestZip": {
            "$ref": "#/components/schemas/pCardDestZip"
          },
          "pCardRequestorName": {
            "$ref": "#/components/schemas/pCardRequestorName"
          },
          "pCardLocalTaxRate": {
            "$ref": "#/components/schemas/pCardLocalTaxRate"
          },
          "pCardPstTaxRegNumber": {
            "$ref": "#/components/schemas/pCardPstTaxRegNumber"
          },
          "pCardCustomerVatRegNumber": {
            "$ref": "#/components/schemas/pCardCustomerVatRegNumber"
          },
          "pCardMerchantVatRegNumber": {
            "$ref": "#/components/schemas/pCardMerchantVatRegNumber"
          },
          "pCardTotalTaxAmount": {
            "$ref": "#/components/schemas/pCardTotalTaxAmount"
          },
          "pCardDtlTaxAmount1Ind": {
            "$ref": "#/components/schemas/pCardDtlTaxAmount1Ind"
          },
          "pCardDtlTaxAmount1": {
            "$ref": "#/components/schemas/pCardDtlTaxAmount1"
          },
          "pCardDtlTaxAmount2Ind": {
            "$ref": "#/components/schemas/pCardDtlTaxAmount2Ind"
          },
          "pCardDtlTaxAmount2": {
            "$ref": "#/components/schemas/pCardDtlTaxAmount2"
          },
          "pCardNationalTaxRate": {
            "$ref": "#/components/schemas/pCardNationalTaxRate"
          },
          "pCardNationalTax": {
            "$ref": "#/components/schemas/pCardNationalTax"
          },
          "pCardLocalTaxAmount": {
            "$ref": "#/components/schemas/pCardLocalTaxAmount"
          },
          "amexTranAdvAddn1": {
            "$ref": "#/components/schemas/amexTranAdvAddn1"
          },
          "amexTranAdvAddn2": {
            "$ref": "#/components/schemas/amexTranAdvAddn2"
          },
          "amexTranAdvAddn3": {
            "$ref": "#/components/schemas/amexTranAdvAddn3"
          },
          "amexTranAdvAddn4": {
            "$ref": "#/components/schemas/amexTranAdvAddn4"
          },
          "pCardDestName": {
            "$ref": "#/components/schemas/pCardDestName"
          },
          "pCardDestAddress": {
            "$ref": "#/components/schemas/pCardDestAddress"
          },
          "pCardDestAddress2": {
            "$ref": "#/components/schemas/pCardDestAddress2"
          },
          "pCardDestCity": {
            "$ref": "#/components/schemas/pCardDestCity"
          },
          "pCardDestStateCd": {
            "$ref": "#/components/schemas/pCardDestStateCd"
          },
          "pCardCommodityCode": {
            "$ref": "#/components/schemas/pCardCommodityCode"
          }
        }
      },
      "level3": {
        "type": "object",
        "properties": {
          "pCard3FreightAmt": {
            "$ref": "#/components/schemas/pCard3FreightAmt"
          },
          "pCard3DutyAmt": {
            "$ref": "#/components/schemas/pCard3DutyAmt"
          },
          "pCard3DestCountryCd": {
            "$ref": "#/components/schemas/pCard3DestCountryCd"
          },
          "pCard3ShipFromZip": {
            "$ref": "#/components/schemas/pCard3ShipFromZip"
          },
          "pCard3DiscAmt": {
            "$ref": "#/components/schemas/pCard3DiscAmt"
          },
          "pCard3VATtaxAmt": {
            "$ref": "#/components/schemas/pCard3VATtaxAmt"
          },
          "pCard3VATtaxRate": {
            "$ref": "#/components/schemas/pCard3VATtaxRate"
          },
          "pCard3AltTaxInd": {
            "$ref": "#/components/schemas/pCard3AltTaxInd"
          },
          "pCard3AltTaxAmt": {
            "$ref": "#/components/schemas/pCard3AltTaxAmt"
          },
          "pCard3InvoiceDiscTreatment": {
            "$ref": "#/components/schemas/pCard3InvoiceDiscTreatment"
          },
          "pCard3TaxTreatment": {
            "$ref": "#/components/schemas/pCard3TaxTreatment"
          },
          "pCard3UniqueVATInvoiceRefNum": {
            "$ref": "#/components/schemas/pCard3UniqueVATInvoiceRefNum"
          },
          "pCard3FreightShipVATTaxAmt": {
            "$ref": "#/components/schemas/pCard3FreightShipVATTaxAmt"
          },
          "pCard3ShipVATRate": {
            "$ref": "#/components/schemas/pCard3ShipVATRate"
          },
          "pCard3LineItemCount": {
            "$ref": "#/components/schemas/pCard3LineItemCount"
          },
          "pCard3LineItems": {
            "$ref": "#/components/schemas/pCard3LineItems"
          }
        }
      },
      "managedBilling": {
        "type": "object",
        "properties": {
          "mbType": {
            "$ref": "#/components/schemas/mbType"
          },
          "mbOrderIdGenerationMethod": {
            "$ref": "#/components/schemas/mbOrderIdGenerationMethod"
          },
          "mbRecurringStartDate": {
            "$ref": "#/components/schemas/mbRecurringStartDate"
          },
          "mbRecurringEndDate": {
            "$ref": "#/components/schemas/mbRecurringEndDate"
          },
          "mbRecurringNoEndDateFlag": {
            "$ref": "#/components/schemas/mbRecurringNoEndDateFlag"
          },
          "mbRecurringMaxBillings": {
            "$ref": "#/components/schemas/mbRecurringMaxBillings"
          },
          "mbRecurringFrequency": {
            "$ref": "#/components/schemas/mbRecurringFrequency"
          },
          "mbMicroPaymentMaxDollarValue": {
            "$ref": "#/components/schemas/mbMicroPaymentMaxDollarValue"
          },
          "mbMicroPaymentMaxBillingDays": {
            "$ref": "#/components/schemas/mbMicroPaymentMaxBillingDays"
          },
          "mbMicroPaymentMaxTransactions": {
            "$ref": "#/components/schemas/mbMicroPaymentMaxTransactions"
          },
          "mbDeferredBillDate": {
            "$ref": "#/components/schemas/mbDeferredBillDate"
          },
          "mbMicroPaymentDaysLeft": {
            "$ref": "#/components/schemas/mbMicroPaymentDaysLeft"
          },
          "mbMicroPaymentDollarsLeft": {
            "$ref": "#/components/schemas/mbMicroPaymentDollarsLeft"
          },
          "mbStatus": {
            "$ref": "#/components/schemas/mbStatus"
          },
          "mbCancelDate": {
            "$ref": "#/components/schemas/mbCancelDate"
          },
          "mbRestoreDate": {
            "$ref": "#/components/schemas/mbRestoreDate"
          },
          "mbRemoveFlag": {
            "$ref": "#/components/schemas/mbRemoveFlag"
          }
        }
      },
      "merchant": {
        "type": "object",
        "properties": {
          "bin": {
            "$ref": "#/components/schemas/bin"
          },
          "terminalID": {
            "$ref": "#/components/schemas/terminalID"
          }
        }
      },
      "merchantInitiatedTransaction": {
        "type": "object",
        "properties": {
          "mitMsgType": {
            "$ref": "#/components/schemas/mitMsgType"
          },
          "mitStoredCredentialInd": {
            "$ref": "#/components/schemas/mitStoredCredentialInd"
          },
          "mitSubmittedTransactionID": {
            "$ref": "#/components/schemas/mitSubmittedTransactionID"
          }
        }
      },
      "order": {
        "type": "object",
        "properties": {
          "orderID": {
            "$ref": "#/components/schemas/orderID"
          },
          "comments": {
            "$ref": "#/components/schemas/comments"
          },
          "shippingRef": {
            "$ref": "#/components/schemas/shippingRef"
          },
          "shippingMethod": {
            "$ref": "#/components/schemas/shippingMethod"
          },
          "industryType": {
            "$ref": "#/components/schemas/industryType"
          },
          "amount": {
            "$ref": "#/components/schemas/amount"
          },
          "adjustedAmount": {
            "$ref": "#/components/schemas/adjustedAmount"
          },
          "outstandingAmt": {
            "$ref": "#/components/schemas/outstandingAmt"
          },
          "reversalRetryNumber": {
            "$ref": "#/components/schemas/reversalRetryNumber"
          },
          "tipAmt": {
            "$ref": "#/components/schemas/tipAmt"
          },
          "discountAmt": {
            "$ref": "#/components/schemas/discountAmt"
          },
          "txnSurchargeAmt": {
            "$ref": "#/components/schemas/txnSurchargeAmt"
          },
          "retryTrace": {
            "$ref": "#/components/schemas/retryTrace"
          },
          "txRefNum": {
            "$ref": "#/components/schemas/txRefNum"
          },
          "priorAuthCd": {
            "$ref": "#/components/schemas/priorAuthCd"
          },
          "retryAttempCount": {
            "$ref": "#/components/schemas/retryAttempCount"
          },
          "lastRetryDate": {
            "$ref": "#/components/schemas/lastRetryDate"
          },
          "txRefIdx": {
            "$ref": "#/components/schemas/txRefIdx"
          },
          "respDateTime": {
            "$ref": "#/components/schemas/respDateTime"
          },
          "authNetwkID": {
            "$ref": "#/components/schemas/authNetwkID"
          },
          "isoCountryCode": {
            "$ref": "#/components/schemas/isoCountryCode"
          },
          "mitReceivedTransactionID": {
            "$ref": "#/components/schemas/mitReceivedTransactionID"
          },
          "splitTxRefIdx": {
            "$ref": "#/components/schemas/splitTxRefIdx"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "orderDefaultDescription": {
            "$ref": "#/components/schemas/orderDefaultDescription"
          },
          "orderDefaultAmount": {
            "$ref": "#/components/schemas/orderDefaultAmount"
          },
          "customerProfileFromOrderInd": {
            "$ref": "#/components/schemas/customerProfileFromOrderInd"
          },
          "customerProfileOrderOverideInd": {
            "$ref": "#/components/schemas/customerProfileOrderOverideInd"
          },
          "inquiryRetryNumber": {
            "$ref": "#/components/schemas/inquiryRetryNumber"
          },
          "sequenceNumber": {
            "$ref": "#/components/schemas/sequenceNumber"
          },
          "flexAcctBalance": {
            "$ref": "#/components/schemas/flexAcctBalance"
          },
          "flexAcctPriorBalance": {
            "$ref": "#/components/schemas/flexAcctPriorBalance"
          },
          "flexRequestedAmount": {
            "$ref": "#/components/schemas/flexRequestedAmount"
          },
          "flexRedeemedAmt": {
            "$ref": "#/components/schemas/flexRedeemedAmt"
          },
          "flexHostTrace": {
            "$ref": "#/components/schemas/flexHostTrace"
          },
          "batchFailedAcctNum": {
            "$ref": "#/components/schemas/batchFailedAcctNum"
          },
          "flexAcctExpireDate": {
            "$ref": "#/components/schemas/flexAcctExpireDate"
          },
          "autoAuthTxRefIdx": {
            "$ref": "#/components/schemas/autoAuthTxRefIdx"
          },
          "autoAuthTxRefNum": {
            "$ref": "#/components/schemas/autoAuthTxRefNum"
          },
          "autoAuthFlexRedeemedAmt": {
            "$ref": "#/components/schemas/autoAuthFlexRedeemedAmt"
          },
          "autoAuthFlexHostTrace": {
            "$ref": "#/components/schemas/autoAuthFlexHostTrace"
          },
          "autoAuthRespTime": {
            "$ref": "#/components/schemas/autoAuthRespTime"
          },
          "superBlockID": {
            "$ref": "#/components/schemas/superBlockID"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/currencyCode"
          },
          "onlineReversalInd": {
            "$ref": "#/components/schemas/onlineReversalInd"
          },
          "remainingBalance": {
            "$ref": "#/components/schemas/remainingBalance"
          },
          "requestAmount": {
            "$ref": "#/components/schemas/requestAmount"
          },
          "redeemedAmount": {
            "$ref": "#/components/schemas/redeemedAmount"
          },
          "tokenAssuranceMethod": {
            "$ref": "#/components/schemas/tokenAssuranceMethod"
          },
          "submittedNetworkTransactionId": {
            "$ref": "#/components/schemas/submittedNetworkTransactionId"
          },
          "receivedNetworkTransactionId": {
            "$ref": "#/components/schemas/receivedNetworkTransactionId"
          },
          "partialReversalAmount": {
            "$ref": "#/components/schemas/partialReversalAmount"
          }
        }
      },
      "pageEncryption": {
        "type": "object",
        "properties": {
          "pieSubscriberID": {
            "$ref": "#/components/schemas/pieSubscriberID"
          },
          "pieFormatID": {
            "$ref": "#/components/schemas/pieFormatID"
          },
          "pieIntegrityCheck": {
            "$ref": "#/components/schemas/pieIntegrityCheck"
          },
          "pieKeyID": {
            "$ref": "#/components/schemas/pieKeyID"
          },
          "piePhaseID": {
            "$ref": "#/components/schemas/piePhaseID"
          },
          "pieMode": {
            "$ref": "#/components/schemas/pieMode"
          }
        }
      },
      "passengerTransportTripLegs": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/passengerTransportTripLegType"
        }
      },
      "passengerTransportTripLegType": {
        "type": "object",
        "properties": {
          "tripLegRecordSequenceNumber": {
            "$ref": "#/components/schemas/tripLegRecordSequenceNumber"
          },
          "conjunctionTicketNumber": {
            "$ref": "#/components/schemas/conjunctionTicketNumber"
          },
          "exchangeTicketNumber": {
            "$ref": "#/components/schemas/exchangeTicketNumber"
          },
          "couponNumber": {
            "$ref": "#/components/schemas/couponNumber"
          },
          "serviceClass": {
            "$ref": "#/components/schemas/serviceClass"
          },
          "carrierCode": {
            "$ref": "#/components/schemas/carrierCode"
          },
          "stopOverCode": {
            "$ref": "#/components/schemas/stopOverCode"
          },
          "cityOfOriginAirportCode": {
            "$ref": "#/components/schemas/cityOfOriginAirportCode"
          },
          "cityOfDestinationAirportCode": {
            "$ref": "#/components/schemas/cityOfDestinationAirportCode"
          },
          "flightNumber": {
            "$ref": "#/components/schemas/flightNumber"
          },
          "departureDate": {
            "$ref": "#/components/schemas/departureDate"
          },
          "departureTime": {
            "$ref": "#/components/schemas/departureTime"
          },
          "arrivalTime": {
            "$ref": "#/components/schemas/arrivalTime"
          },
          "fareBasisCode": {
            "$ref": "#/components/schemas/fareBasisCode"
          },
          "tripLegFare": {
            "$ref": "#/components/schemas/tripLegFare"
          },
          "tripLegTaxes": {
            "$ref": "#/components/schemas/tripLegTaxes"
          },
          "tripLegFee": {
            "$ref": "#/components/schemas/tripLegFee"
          },
          "endorsementsRestrictions": {
            "$ref": "#/components/schemas/endorsementsRestrictions"
          }
        }
      },
      "paymentInstrument": {
        "type": "object",
        "properties": {
          "card": {
            "$ref": "#/components/schemas/card"
          },
          "useProfile": {
            "$ref": "#/components/schemas/useProfile"
          },
          "encrypted": {
            "$ref": "#/components/schemas/encrypted"
          },
          "ecp": {
            "$ref": "#/components/schemas/ecp"
          },
          "eudd": {
            "$ref": "#/components/schemas/eudd"
          },
          "targetCardBrand": {
            "$ref": "#/components/schemas/targetCardBrand"
          },
          "customerAccountType": {
            "$ref": "#/components/schemas/customerAccountType"
          }
        }
      },
      "pCard3LineItems": {
        "type": "array",
        "items": {
          "type": "object",
          "$ref": "#/components/schemas/item"
        }
      },
      "pEMVProviderLineItem": {
        "type": "array",
        "providerItem": {
          "type": "object",
          "$ref": "#/components/schemas/providerItem"
        }
      },
      "pEMVPublicKeyLineItem": {
        "type": "array",
        "publicKeyItem": {
          "type": "object",
          "$ref": "#/components/schemas/publicKeyItem"
        }
      },
      "primaryRecipient": {
        "type": "object",
        "properties": {
          "prBirthDate": {
            "$ref": "#/components/schemas/prBirthDate"
          },
          "prMaskedAccountNumber": {
            "$ref": "#/components/schemas/prMaskedAccountNumber"
          },
          "prPartialPostalCode": {
            "$ref": "#/components/schemas/prPartialPostalCode"
          },
          "prLastName": {
            "$ref": "#/components/schemas/prLastName"
          }
        }
      },
      "profile": {
        "type": "object",
        "properties": {
          "addProfileFromOrder": {
            "$ref": "#/components/schemas/addProfileFromOrder"
          },
          "customerRefNum": {
            "$ref": "#/components/schemas/customerRefNum"
          },
          "profileOrderOverideInd": {
            "$ref": "#/components/schemas/profileOrderOverideInd"
          },
          "customerName": {
            "$ref": "#/components/schemas/customerName"
          },
          "customerEmail": {
            "$ref": "#/components/schemas/customerEmail"
          },
          "customerPhone": {
            "$ref": "#/components/schemas/customerPhone"
          },
          "accountUpdaterEligibility": {
            "$ref": "#/components/schemas/accountUpdaterEligibility"
          },
          "profileProcStatus": {
            "$ref": "#/components/schemas/profileProcStatus"
          },
          "profileProcStatusMsg": {
            "$ref": "#/components/schemas/profileProcStatusMsg"
          },
          "profileAction": {
            "$ref": "#/components/schemas/profileAction"
          },
          "customerAddress1": {
            "$ref": "#/components/schemas/customerAddress1"
          },
          "customerAddress2": {
            "$ref": "#/components/schemas/customerAddress2"
          },
          "customerCity": {
            "$ref": "#/components/schemas/customerCity"
          },
          "customerState": {
            "$ref": "#/components/schemas/customerState"
          },
          "customerZIP": {
            "$ref": "#/components/schemas/customerZIP"
          },
          "customerCountryCode": {
            "$ref": "#/components/schemas/customerCountryCode"
          },
          "status": {
            "type": "string",
            "description": "profile status"
          },
          "customerProfileAction": {
            "$ref": "#/components/schemas/customerProfileAction"
          },
          "scheduledDate": {
            "$ref": "#/components/schemas/scheduledDate"
          }
        }
      },
      "providerItem": {
        "type": "object",
        "properties": {
          "cardBrand": {
            "$ref": "#/components/schemas/cardBrand"
          },
          "applicationId": {
            "$ref": "#/components/schemas/applicationId"
          },
          "fallback": {
            "$ref": "#/components/schemas/fallback"
          },
          "biasedRandomThreshold": {
            "$ref": "#/components/schemas/biasedRandomThreshold"
          },
          "floorLimit": {
            "$ref": "#/components/schemas/floorLimit"
          },
          "pEMVPublicKeyLineItem": {
            "$ref": "#/components/schemas/pEMVPublicKeyLineItem"
          }
        }
      },
      "publicKeyItem": {
        "type": "object",
        "properties": {
          "index": {
            "$ref": "#/components/schemas/index"
          },
          "exponentLength": {
            "$ref": "#/components/schemas/exponentLength"
          },
          "exponent": {
            "$ref": "#/components/schemas/exponent"
          },
          "modulusLength": {
            "$ref": "#/components/schemas/modulusLength"
          },
          "modulus": {
            "$ref": "#/components/schemas/modulus"
          },
          "checksumLength": {
            "$ref": "#/components/schemas/checksumLength"
          },
          "checksum": {
            "$ref": "#/components/schemas/checksum"
          }
        }
      },
      "realTimeAccountUpdater": {
        "type": "object",
        "properties": {
          "rtauUpdatedCardNum": {
            "$ref": "#/components/schemas/rtauUpdatedCardNum"
          },
          "rtauUpdatedCardExp": {
            "$ref": "#/components/schemas/rtauUpdatedCardExp"
          },
          "rtauResponseCode": {
            "$ref": "#/components/schemas/rtauResponseCode"
          }
        }
      },
      "softDesc": {
        "type": "object",
        "properties": {
          "softDescMercName": {
            "$ref": "#/components/schemas/softDescMercName"
          },
          "softDescProdDesc": {
            "$ref": "#/components/schemas/softDescProdDesc"
          },
          "softDescMercCity": {
            "$ref": "#/components/schemas/softDescMercCity"
          },
          "softDescMercPhone": {
            "$ref": "#/components/schemas/softDescMercPhone"
          },
          "softDescMercURL": {
            "$ref": "#/components/schemas/softDescMercURL"
          },
          "softDescMercEmail": {
            "$ref": "#/components/schemas/softDescMercEmail"
          }
        }
      },
      "softMerchantDescriptors": {
        "type": "object",
        "properties": {
          "smdDBA": {
            "$ref": "#/components/schemas/smdDBA"
          },
          "smdMerchantID": {
            "$ref": "#/components/schemas/smdMerchantID"
          },
          "smdContactInfo": {
            "$ref": "#/components/schemas/smdContactInfo"
          },
          "smdStreet": {
            "$ref": "#/components/schemas/smdStreet"
          },
          "smdCity": {
            "$ref": "#/components/schemas/smdCity"
          },
          "smdRegion": {
            "$ref": "#/components/schemas/smdRegion"
          },
          "smdPostalCode": {
            "$ref": "#/components/schemas/smdPostalCode"
          },
          "smdCountryCode": {
            "$ref": "#/components/schemas/smdCountryCode"
          },
          "smdMCC": {
            "$ref": "#/components/schemas/smdMCC"
          },
          "smdEmail": {
            "$ref": "#/components/schemas/smdEmail"
          },
          "smdPhoneNumber": {
            "$ref": "#/components/schemas/smdPhoneNumber"
          },
          "smdServiceEstablishmentNum": {
            "$ref": "#/components/schemas/smdServiceEstablishmentNum"
          },
          "smdTaxExemptCharityInd": {
            "$ref": "#/components/schemas/smdTaxExemptCharityInd"
          }
        }
      },
      "status": {
        "type": "object",
        "properties": {
          "procStatus": {
            "$ref": "#/components/schemas/procStatus"
          },
          "procStatusMessage": {
            "$ref": "#/components/schemas/procStatusMessage"
          },
          "hostRespCode": {
            "$ref": "#/components/schemas/hostRespCode"
          },
          "actualRespCd": {
            "$ref": "#/components/schemas/actualRespCd"
          },
          "respCode": {
            "$ref": "#/components/schemas/respCode"
          },
          "respCodeMessage": {
            "$ref": "#/components/schemas/respCodeMessage"
          },
          "approvalStatus": {
            "$ref": "#/components/schemas/approvalStatus"
          },
          "authorizationCode": {
            "$ref": "#/components/schemas/authorizationCode"
          },
          "partialAuthOccurred": {
            "$ref": "#/components/schemas/partialAuthOccurred"
          },
          "visaVbVRespCode": {
            "$ref": "#/components/schemas/visaVbVRespCode"
          },
          "mcRecurringAdvCode": {
            "$ref": "#/components/schemas/mcRecurringAdvCode"
          },
          "countryFraudFilterStatus": {
            "$ref": "#/components/schemas/countryFraudFilterStatus"
          },
          "autoAuthProcStatus": {
            "$ref": "#/components/schemas/autoAuthProcStatus"
          },
          "autoAuthStatusMsg": {
            "$ref": "#/components/schemas/autoAuthStatusMsg"
          },
          "autoAuthApprovalStatus": {
            "$ref": "#/components/schemas/autoAuthApprovalStatus"
          },
          "autoAuthResponseCodes": {
            "$ref": "#/components/schemas/autoAuthResponseCodes"
          },
          "pymtBrandAuthResponseCode": {
            "$ref": "#/components/schemas/pymtBrandAuthResponseCode"
          },
          "pymtBrandResponseCodeCategory": {
            "$ref": "#/components/schemas/pymtBrandResponseCodeCategory"
          },
          "fundingStatus": {
            "$ref": "#/components/schemas/fundingStatus"
          }
        }
      },
      "strongCustomerAuthenticationExemption": {
        "type": "object",
        "properties": {
          "scaTrustedMerchant": {
            "$ref": "#/components/schemas/scaTrustedMerchant"
          },
          "scaSecureCorporatePayment": {
            "$ref": "#/components/schemas/scaSecureCorporatePayment"
          },
          "scaTransactionRiskAnalysis": {
            "$ref": "#/components/schemas/scaTransactionRiskAnalysis"
          },
          "scaLowValuePayment": {
            "$ref": "#/components/schemas/scaLowValuePayment"
          },
          "scaMerchantInitiatedTransaction": {
            "$ref": "#/components/schemas/scaMerchantInitiatedTransaction"
          },
          "scaRecurringPayment": {
            "$ref": "#/components/schemas/scaRecurringPayment"
          },
          "scaDelegation": {
            "$ref": "#/components/schemas/scaDelegation"
          }
        }
      },
      "token": {
        "type": "object",
        "properties": {
          "tokenRequestorID": {
            "$ref": "#/components/schemas/tokenRequestorID"
          },
          "actionCode": {
            "$ref": "#/components/schemas/actionCode"
          }
        }
      },
      "travelFareDetail": {
        "type": "object",
        "properties": {
          "tAATotalFare": {
            "$ref": "#/components/schemas/tAATotalFare"
          },
          "tAATotalFees": {
            "$ref": "#/components/schemas/tAATotalFees"
          },
          "tAATotalTaxes": {
            "$ref": "#/components/schemas/tAATotalTaxes"
          },
          "tAAExchangeTicketAmount": {
            "$ref": "#/components/schemas/tAAExchangeTicketAmount"
          },
          "tAAExchangeFeeAmount": {
            "$ref": "#/components/schemas/tAAExchangeFeeAmount"
          },
          "tAAInvoiceNumber": {
            "$ref": "#/components/schemas/tAAInvoiceNumber"
          },
          "tAAOriginalCurrencyCode": {
            "$ref": "#/components/schemas/tAAOriginalCurrencyCode"
          }
        }
      },
      "travelTicketAndPassengerInfo": {
        "type": "object",
        "properties": {
          "tAATicketNumber": {
            "$ref": "#/components/schemas/tAATicketNumber"
          },
          "tAAPassengerName": {
            "$ref": "#/components/schemas/tAAPassengerName"
          },
          "tAACustomerCode": {
            "$ref": "#/components/schemas/tAACustomerCode"
          },
          "tAAIssueDate": {
            "$ref": "#/components/schemas/tAAIssueDate"
          },
          "tAAIssuingCarrier": {
            "$ref": "#/components/schemas/tAAIssuingCarrier"
          },
          "tAAArrivalDate": {
            "$ref": "#/components/schemas/tAAArrivalDate"
          },
          "tAANumberInParty": {
            "$ref": "#/components/schemas/tAANumberInParty"
          },
          "tAAConjunctionTicketIndicator": {
            "$ref": "#/components/schemas/tAAConjunctionTicketIndicator"
          },
          "tAAElectronicTicketIndicator": {
            "$ref": "#/components/schemas/tAAElectronicTicketIndicator"
          },
          "tAARestrictedTicketIndicator": {
            "$ref": "#/components/schemas/tAARestrictedTicketIndicator"
          },
          "tAAIATAClientCode": {
            "$ref": "#/components/schemas/tAAIATAClientCode"
          },
          "tAACreditReasonIndicator": {
            "$ref": "#/components/schemas/tAACreditReasonIndicator"
          },
          "tAATicketChangeIndicator": {
            "$ref": "#/components/schemas/tAATicketChangeIndicator"
          },
          "tAADocumentType": {
            "$ref": "#/components/schemas/tAADocumentType"
          },
          "tAATicketType": {
            "$ref": "#/components/schemas/tAATicketType"
          },
          "tAAFormatCode": {
            "$ref": "#/components/schemas/tAAFormatCode"
          },
          "tAATransactionType": {
            "$ref": "#/components/schemas/tAATransactionType"
          },
          "tAATicketingCarrierName": {
            "$ref": "#/components/schemas/tAATicketingCarrierName"
          },
          "tAATicketIssueCity": {
            "$ref": "#/components/schemas/tAATicketIssueCity"
          },
          "tAATravelPackageIndicator": {
            "$ref": "#/components/schemas/tAATravelPackageIndicator"
          }
        }
      },
      "useProfile": {
        "type": "object",
        "properties": {
          "useCustomerRefNum": {
            "$ref": "#/components/schemas/useCustomerRefNum"
          }
        }
      },
      "responseStatus": {
        "type": "string",
        "enum": [
          "SUCCESS",
          "DENIED",
          "ERROR"
        ]
      },
      "responseCode": {
        "type": "string"
      },
      "responseMessage": {
        "type": "string"
      },
      "hostMessage": {
        "type": "string"
      },
      "messages": {
        "description": "A list of errors and warnings",
        "type": "object",
        "properties": {
          "procStatus": {
            "$ref": "#/components/schemas/procStatus"
          },
          "procStatusMessage": {
            "$ref": "#/components/schemas/procStatusMessage"
          }
        },
        "example": {
          "procStatus": "20123",
          "procStatusMessage": "EXAMPLE_ERROR"
        }
      },
      "heartbeat": {
        "type": "string"
      },
      "politicalTimeZone": {
        "type": "string"
      },
      "pinlessDebitMerchantUrl": {
        "type": "string"
      },
      "returnEmvDownloadDate": {
        "type": "string"
      },
      "customerCity": {
        "type": "string"
      },
      "pymtBrandAuthResponseCode": {
        "type": "string"
      },
      "pymtBrandResponseCodeCategory": {
        "type": "string"
      },
      "useStoredAAVInd": {
        "type": "string"
      },
      "requestType": {
        "type": "string"
      },
      "mbRestoreDate": {
        "type": "string"
      },
      "mcRecurringAdvCode": {
        "type": "string"
      },
      "healthBenefitCardInd": {
        "type": "string"
      },
      "mcSecureCodeAAV": {
        "type": "string"
      },
      "pCardTotalTaxAmount": {
        "type": "string"
      },
      "autoAuthTxRefIdx": {
        "type": "string"
      },
      "bin": {
        "type": "string",
        "enum": [
          "000001",
          "000002"
        ],
        "example": "000001"
      },
      "pCard3LineItemCount": {
        "type": "string"
      },
      "mcDirectoryTransID": {
        "type": "string"
      },
      "orderDefaultDescription": {
        "type": "string"
      },
      "customerGender": {
        "type": "string"
      },
      "pCard3FreightAmt": {
        "type": "string"
      },
      "scaTransactionRiskAnalysis": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "fxExchangeRate": {
        "type": "string"
      },
      "smdMCC": {
        "type": "string"
      },
      "fxRateHandlingInd": {
        "type": "string",
        "enum": [
          "D",
          "R"
        ]
      },
      "ucafInd": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7"
        ]
      },
      "biasedRandomThreshold": {
        "type": "string"
      },
      "pCardLocalTaxAmount": {
        "type": "string"
      },
      "panSequenceNumber": {
        "type": "string"
      },
      "autoAuthApprovalStatus": {
        "type": "string"
      },
      "flexAcctExpireDate": {
        "type": "string"
      },
      "localDateTime": {
        "type": "string"
      },
      "euddMandateSignatureDate": {
        "type": "string"
      },
      "superBlockID": {
        "type": "string"
      },
      "autoAuthTxRefNum": {
        "type": "string"
      },
      "priorAuthCd": {
        "type": "string"
      },
      "prBirthDate": {
        "type": "string"
      },
      "flexAcctPriorBalance": {
        "type": "string"
      },
      "iacDenial": {
        "type": "string"
      },
      "ecpCheckDDA": {
        "type": "string"
      },
      "actionCode": {
        "type": "string"
      },
      "prPartialPostalCode": {
        "type": "string"
      },
      "floorLimit": {
        "type": "string"
      },
      "respCodeMessage": {
        "type": "string"
      },
      "verifyByVisaCAVV": {
        "type": "string"
      },
      "scaDelegation": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "avsDestState": {
        "type": "string"
      },
      "cookiesStatus": {
        "type": "string"
      },
      "communicationSupport": {
        "type": "string"
      },
      "approvalStatus": {
        "type": "string"
      },
      "softDescMercName": {
        "type": "string"
      },
      "procStatus": {
        "type": "string"
      },
      "terminalLaneId": {
        "type": "string"
      },
      "rulesTrigger": {
        "type": "string"
      },
      "ccCardVerifyPresenceInd": {
        "enum": [
          "1",
          "2",
          "9"
        ]
      },
      "avsPhoneType": {
        "type": "string",
        "enum": [
          "D",
          "H",
          "N",
          "W"
        ]
      },
      "ewsIDNumber": {
        "type": "string"
      },
      "ewsPhoneMatch": {
        "type": "string"
      },
      "ewsAddressLine1": {
        "type": "string"
      },
      "paymentActionInd": {
        "type": "string",
        "enum": [
          "P",
          "F"
        ]
      },
      "safetechMerchantID": {
        "type": "string"
      },
      "cardholderPresent": {
        "type": "string"
      },
      "dpanAccountStatus": {
        "type": "string"
      },
      "tipAmt": {
        "type": "string"
      },
      "pCard3DiscAmt": {
        "type": "string"
      },
      "isoCountryCode": {
        "type": "string"
      },
      "tacDefault": {
        "type": "string"
      },
      "latitudeLongitude": {
        "type": "string"
      },
      "avsState": {
        "type": "string"
      },
      "customerState": {
        "type": "string"
      },
      "bmlCustomerAnnualIncome": {
        "type": "string"
      },
      "pymtBrandProgramCode": {
        "type": "string",
        "enum": [
          "MUP",
          "DPB",
          "ASK"
        ]
      },
      "keySerialNumber": {
        "type": "string"
      },
      "scaSecureCorporatePayment": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "customerDriverLicense": {
        "type": "string"
      },
      "autoAuthResponseCodes": {
        "type": "string"
      },
      "pin": {
        "type": "string"
      },
      "pCard3DtlDesc": {
        "type": "string"
      },
      "fxRateStatus": {
        "type": "string"
      },
      "pCardDestStateCd": {
        "type": "string"
      },
      "customerProfileAction": {
        "type": "string"
      },
      "amexTranAdvAddn1": {
        "type": "string"
      },
      "ewsPhoneNumber": {
        "type": "string"
      },
      "reversalRetryNumber": {
        "type": "string"
      },
      "pCard3AltTaxInd": {
        "type": "string"
      },
      "pCardOrderID": {
        "type": "string"
      },
      "applicationId": {
        "type": "string"
      },
      "dataEntrySource": {
        "type": "string"
      },
      "numberOfDevices": {
        "type": "string"
      },
      "flexAutoAuthInd": {
        "type": "string"
      },
      "fallback": {
        "type": "string"
      },
      "avsDestCity": {
        "type": "string"
      },
      "ewsCity": {
        "type": "string"
      },
      "ewsIDNumberMatch": {
        "type": "string"
      },
      "bmlCustomerCheckingAccount": {
        "type": "string"
      },
      "autoAuthFlexAction": {
        "type": "string"
      },
      "transType": {
        "type": "string",
        "enum": [
          "A",
          "AC",
          "FC",
          "R",
          "FR"
        ]
      },
      "scaTrustedMerchant": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "cardholderActivatedTerminal": {
        "type": "string"
      },
      "debitPinCashBack": {
        "type": "string"
      },
      "ewsPhoneType": {
        "type": "string",
        "enum": [
          "H",
          "W"
        ]
      },
      "smdCountryCode": {
        "type": "string"
      },
      "fxPresentmentCurrency": {
        "type": "string"
      },
      "retailTransInfo": {
        "type": "string"
      },
      "numberOfEmails": {
        "type": "string"
      },
      "addProfileFromOrder": {
        "type": "string",
        "enum": [
          "A",
          "S",
          "O",
          "D"
        ]
      },
      "mbRecurringFrequency": {
        "type": "string"
      },
      "flexAction": {
        "type": "string"
      },
      "tokenTxnType": {
        "type": "string",
        "enum": [
          "GT",
          "UT"
        ]
      },
      "fxSettlementCurrency": {
        "type": "string"
      },
      "pCard3DtlProdCd": {
        "type": "string"
      },
      "pCard3DtlDisc": {
        "type": "string"
      },
      "smdEmail": {
        "type": "string"
      },
      "customerCountryCode": {
        "type": "string"
      },
      "pCard3DtlUnitCost": {
        "type": "string"
      },
      "rtauResponseCode": {
        "type": "string"
      },
      "fraudStatusCode": {
        "type": "string"
      },
      "proxyStatus": {
        "type": "string"
      },
      "profileAction": {
        "type": "string"
      },
      "cardPresentInd": {
        "type": "string"
      },
      "customerIDCreationTime": {
        "type": "string"
      },
      "safetechToken": {
        "type": "string"
      },
      "mbRecurringMaxBillings": {
        "type": "string"
      },
      "terminalLocation": {
        "type": "string"
      },
      "smdRegion": {
        "type": "string"
      },
      "visaVbVRespCode": {
        "type": "string"
      },
      "flexAcctBalance": {
        "type": "string"
      },
      "checksumLength": {
        "type": "string"
      },
      "avsDestPhoneType": {
        "type": "string",
        "enum": [
          "D",
          "H",
          "N",
          "W"
        ]
      },
      "ecpTerminalState": {
        "type": "string"
      },
      "onlineReversalInd": {
        "type": "string"
      },
      "bmlCustomerSavingsAccount": {
        "type": "string"
      },
      "mbMicroPaymentMaxBillingDays": {
        "type": "string"
      },
      "debitPinNumber": {
        "type": "string"
      },
      "flexRequestedAmount": {
        "type": "string"
      },
      "ctiPrepaidCard": {
        "type": "string"
      },
      "ctiPINlessDebitCard": {
        "type": "string"
      },
      "checksum": {
        "type": "string"
      },
      "pCardCustomerVatRegNumber": {
        "type": "string"
      },
      "orderID": {
        "type": "string"
      },
      "pinlessDebitTotalShpmnt": {
        "type": "string"
      },
      "kaptchaMatchFlag": {
        "type": "string"
      },
      "smdContactInfo": {
        "type": "string"
      },
      "dpanInd": {
        "type": "string",
        "enum": [
          "Y",
          "S"
        ]
      },
      "autoAuthStatusMsg": {
        "type": "string"
      },
      "pcRemoteIndicator": {
        "type": "string"
      },
      "authorizationCode": {
        "type": "string"
      },
      "deferredAuth": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "ecpReDepositFreq": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "0"
        ]
      },
      "ccCardVerifyNum": {
        "type": "string"
      },
      "orderDefaultAmount": {
        "type": "string"
      },
      "customerEmail": {
        "type": "string"
      },
      "ecpCheckRT": {
        "type": "string"
      },
      "softDescMercPhone": {
        "type": "string"
      },
      "amount": {
        "type": "string"
      },
      "ewsLastName": {
        "type": "string"
      },
      "customerProfileFromOrderInd": {
        "type": "string"
      },
      "euddBIC": {
        "type": "string"
      },
      "shippingMethod": {
        "type": "string",
        "enum": [
          "C",
          "D",
          "E",
          "G",
          "I",
          "M",
          "N",
          "O",
          "P",
          "S",
          "T",
          "W"
        ]
      },
      "autoAuthProcStatus": {
        "type": "string"
      },
      "pCard3DtlTaxRate": {
        "type": "string"
      },
      "ewsCheckSerialNumber": {
        "type": "string"
      },
      "adjustedAmount": {
        "type": "string"
      },
      "ewsMiddleNameMatch": {
        "type": "string"
      },
      "customerTimeZone": {
        "type": "string"
      },
      "ecpReDepositInd": {
        "type": "string",
        "enum": [
          "MO",
          "TU",
          "WE",
          "TH",
          "FR"
        ]
      },
      "ewsDOBMatch": {
        "type": "string"
      },
      "voiceDevice": {
        "type": "string"
      },
      "actualRespCd": {
        "type": "string"
      },
      "applicationLabel": {
        "type": "string"
      },
      "ecpAuthMethod": {
        "type": "string",
        "enum": [
          "W",
          "I",
          "T",
          "A",
          "P"
        ]
      },
      "pCard3DtlTaxAmt": {
        "type": "string"
      },
      "pCard3ShipFromZip": {
        "type": "string"
      },
      "chipCardData": {
        "type": "string"
      },
      "exponentLength": {
        "type": "string"
      },
      "bmlShippingCost": {
        "type": "string"
      },
      "partialAuthOccurred": {
        "type": "string"
      },
      "euddRibCode": {
        "type": "string"
      },
      "pCardDtlTaxAmount2Ind": {
        "type": "string"
      },
      "ewsFirstNameMatch": {
        "type": "string"
      },
      "deviceFingerprint": {
        "type": "string"
      },
      "accountUpdaterEligibility": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "pCard3DtlDiscInd": {
        "type": "string"
      },
      "customerAddress1": {
        "type": "string"
      },
      "pCardDtlTaxAmount2": {
        "type": "string"
      },
      "dwWalletID": {
        "type": "string"
      },
      "fraudScoreProcMsg": {
        "type": "string"
      },
      "targetCardBrand": {
        "type": "string",
        "enum": [
          "DI",
          "VI"
        ]
      },
      "pieSubscriberID": {
        "type": "string",
        "enum": [
          "FPE",
          "EFPE"
        ]
      },
      "pieFormatID": {
        "type": "string",
        "enum": [
          "4",
          "0",
          "64"
        ]
      },
      "pieIntegrityCheck": {
        "type": "string"
      },
      "pieKeyID": {
        "type": "string"
      },
      "piePhaseID": {
        "type": "string"
      },
      "pieMode": {
        "type": "string",
        "enum": [
          "FPE",
          "EFPE"
        ]
      },
      "debitRoutingNetwork": {
        "type": "string",
        "enum": [
          "AP",
          "NP",
          "PP",
          "SP"
        ]
      },
      "flexRedeemedAmt": {
        "type": "string"
      },
      "orbitalConnectionPassword": {
        "type": "string"
      },
      "ecpActionCode": {
        "type": "string",
        "enum": [
          "LO",
          "ND",
          "NC",
          "W1",
          "W3",
          "W5",
          "W6",
          "W7",
          "W8",
          "W9"
        ]
      },
      "fraudScoreIndicator": {
        "type": "string"
      },
      "verifyByVisaXID": {
        "type": "string"
      },
      "javascriptStatus": {
        "type": "string"
      },
      "pCardLocalTaxRate": {
        "type": "string"
      },
      "redeemedAmount": {
        "type": "string"
      },
      "orbitalConnectionUsername": {
        "type": "string"
      },
      "taxInd": {
        "type": "string",
        "enum": [
          "0",
          "1",
          "2"
        ]
      },
      "emvSupport": {
        "type": "string"
      },
      "debitBillerReferenceNumber": {
        "type": "string"
      },
      "flashStatus": {
        "type": "string"
      },
      "euddMandateID": {
        "type": "string"
      },
      "settleRejectedHoldingBin": {
        "type": "string"
      },
      "batchSeqNum": {
        "type": "string"
      },
      "iacOnline": {
        "type": "string"
      },
      "ewsCityMatch": {
        "type": "string"
      },
      "mitMsgType": {
        "type": "string"
      },
      "ctiCommercialCard": {
        "type": "string"
      },
      "customerIpAddress": {
        "type": "string"
      },
      "autoAuthRespTime": {
        "type": "string"
      },
      "modulus": {
        "type": "string"
      },
      "tvr": {
        "type": "string"
      },
      "avsAddress1": {
        "type": "string"
      },
      "rulesDataLength": {
        "type": "string"
      },
      "customerName": {
        "type": "string"
      },
      "smdDBA": {
        "type": "string"
      },
      "ctiLevel3Eligible": {
        "type": "string"
      },
      "pCardNationalTax": {
        "type": "string"
      },
      "ewsIDTypeMatch": {
        "type": "string"
      },
      "deviceID": {
        "type": "string"
      },
      "pCardDtlTaxAmount1Ind": {
        "type": "string"
      },
      "ccAccountNum": {
        "type": "string"
      },
      "pinlessDebitTxnType": {
        "type": "string",
        "enum": [
          "BP",
          "EC"
        ]
      },
      "pCardDtlTaxAmount1": {
        "type": "string"
      },
      "ctiDurbinExemption": {
        "type": "string"
      },
      "switchSoloIssueNum": {
        "type": "string"
      },
      "avsDestCountryCode": {
        "type": "string",
        "enum": [
          "US",
          "CA",
          "GB",
          "UK"
        ]
      },
      "fraudScoreProcStatus": {
        "type": "string"
      },
      "emailAddressSubtype": {
        "type": "string",
        "enum": [
          "B",
          "G"
        ]
      },
      "partialAuthInd": {
        "type": "string",
        "enum": [
          "Y",
          "N",
          "S"
        ]
      },
      "flexHostTrace": {
        "type": "string"
      },
      "complianceClass": {
        "type": "string"
      },
      "bmlProductDeliveryType": {
        "type": "string"
      },
      "pCard3DtlUOM": {
        "type": "string"
      },
      "avConsumerAccountDate": {
        "type": "string"
      },
      "cardType": {
        "type": "string"
      },
      "requestAmount": {
        "type": "string"
      },
      "switchSoloCardStartDate": {
        "type": "string"
      },
      "inquiryRetryNumber": {
        "type": "string"
      },
      "websiteShortName": {
        "type": "string"
      },
      "riskScore": {
        "type": "string"
      },
      "mobileDeviceType": {
        "type": "string"
      },
      "customerAddress2": {
        "type": "string"
      },
      "emvDownloadDate": {
        "type": "string"
      },
      "smdMerchantID": {
        "type": "string"
      },
      "procStatusMessage": {
        "type": "string"
      },
      "taxAmount": {
        "type": "string"
      },
      "softDescMercEmail": {
        "type": "string"
      },
      "terminalEntry": {
        "type": "string"
      },
      "customerRegion": {
        "type": "string"
      },
      "rulesData": {
        "type": "string"
      },
      "merchantID": {
        "type": "string"
      },
      "softDescMercCity": {
        "type": "string"
      },
      "pCardRequestorName": {
        "type": "string"
      },
      "ecpSameDayInd": {
        "type": "string"
      },
      "scheduledDate": {
        "type": "string"
      },
      "rtauUpdatedCardNum": {
        "type": "string"
      },
      "mbMicroPaymentMaxDollarValue": {
        "type": "string"
      },
      "recurringInd": {
        "type": "string",
        "enum": [
          "RF",
          "RS",
          "IF",
          "IS"
        ]
      },
      "pCard3DtlDebitInd": {
        "type": "string"
      },
      "ewsBusinessName": {
        "type": "string"
      },
      "pCardNationalTaxRate": {
        "type": "string"
      },
      "amexTranAdvAddn2": {
        "type": "string"
      },
      "avsAddress2": {
        "type": "string"
      },
      "euddBankBranchCode": {
        "type": "string"
      },
      "avsCity": {
        "type": "string"
      },
      "deviceLayers": {
        "type": "string"
      },
      "avsDestName": {
        "type": "string"
      },
      "ewsNameMatch": {
        "type": "string"
      },
      "ewsDOB": {
        "type": "string"
      },
      "ctiAffluentCard": {
        "type": "string"
      },
      "debitPinSecurityControl": {
        "type": "string"
      },
      "euddCountryCode": {
        "type": "string",
        "enum": [
          "AT",
          "BE",
          "CY",
          "DE",
          "ES",
          "FI",
          "FR",
          "GB",
          "IE",
          "IT",
          "LU",
          "MC",
          "MT",
          "NL",
          "PT",
          "SI",
          "SK"
        ]
      },
      "kttDataString": {
        "type": "string"
      },
      "cardIndicators": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "ewsZip": {
        "type": "string",
        "enum": [
          "NNNNN",
          "NNNNNNNNN",
          "NNNNN-NNNN"
        ]
      },
      "customerLocalDateTime": {
        "type": "string"
      },
      "mbRecurringStartDate": {
        "type": "string"
      },
      "encryptionInd": {
        "type": "string"
      },
      "encryptedMagStripeTrack2": {
        "type": "string"
      },
      "fxRateID": {
        "type": "string"
      },
      "magStripeTrack1": {
        "type": "string"
      },
      "euddBankSortCode": {
        "type": "string"
      },
      "respCode": {
        "type": "string"
      },
      "mbDeferredBillDate": {
        "type": "string"
      },
      "ewsIDType": {
        "type": "string",
        "enum": [
          "0",
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8",
          "9",
          "A",
          "B"
        ]
      },
      "respDateTime": {
        "type": "string"
      },
      "pCardPstTaxRegNumber": {
        "type": "string"
      },
      "avsZip": {
        "type": "string"
      },
      "bmlItemCategory": {
        "type": "string"
      },
      "iacDefault": {
        "type": "string"
      },
      "retryAttempCount": {
        "type": "string"
      },
      "peripheralSupport": {
        "type": "string"
      },
      "bmlPreapprovalInvitationNum": {
        "type": "string"
      },
      "ewsState": {
        "type": "string"
      },
      "kttDataLength": {
        "type": "string"
      },
      "softDescMercURL": {
        "type": "string"
      },
      "hostAVSRespCode": {
        "type": "string"
      },
      "scaLowValuePayment": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "attendedTerminal": {
        "type": "string"
      },
      "flexPartialRedemptionInd": {
        "type": "string"
      },
      "giftCardInd": {
        "type": "string"
      },
      "ecpBankAcctType": {
        "type": "string"
      },
      "mbMicroPaymentDollarsLeft": {
        "type": "string"
      },
      "ewsFirstName": {
        "type": "string"
      },
      "softDescProdDesc": {
        "type": "string"
      },
      "ewsZipMatch": {
        "type": "string"
      },
      "ewsAOAConditionCode": {
        "type": "string"
      },
      "smdPhoneNumber": {
        "type": "string"
      },
      "euddMandateType": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7"
        ]
      },
      "customerProfileOrderOverideInd": {
        "type": "string",
        "enum": [
          "NO",
          "OI",
          "OD",
          "O"
        ]
      },
      "encryptionMethod": {
        "type": "string"
      },
      "bmlCustomerSSN": {
        "type": "string"
      },
      "posEntryMode": {
        "type": "string"
      },
      "bmlCustomerEmail": {
        "type": "string"
      },
      "dwIncentiveInd": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "mbCancelDate": {
        "type": "string"
      },
      "pCardMerchantVatRegNumber": {
        "type": "string"
      },
      "ctiHealthcareCard": {
        "type": "string"
      },
      "scaRecurringPayment": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "smdStreet": {
        "type": "string"
      },
      "pCard3AltTaxAmt": {
        "type": "string"
      },
      "pCard3DtlDiscountRate": {
        "type": "string"
      },
      "deviceSecuritySupport": {
        "type": "string"
      },
      "customerBrowserName": {
        "type": "string"
      },
      "outstandingAmt": {
        "type": "string"
      },
      "txRefNum": {
        "type": "string"
      },
      "ccExp": {
        "type": "string"
      },
      "avsDestAddress2": {
        "type": "string"
      },
      "profileOrderOverideInd": {
        "type": "string"
      },
      "pCard3DestCountryCd": {
        "type": "string"
      },
      "browserCountry": {
        "type": "string"
      },
      "pCard3DtlGrossNet": {
        "type": "string"
      },
      "hostCVVRespCode": {
        "type": "string"
      },
      "ewsStateMatch": {
        "type": "string"
      },
      "mbOrderIdGenerationMethod": {
        "type": "string",
        "enum": [
          "IO",
          "DI"
        ]
      },
      "cvvRespCode": {
        "type": "string"
      },
      "mobileDeviceIndicator": {
        "type": "string"
      },
      "splitTxRefIdx": {
        "type": "string"
      },
      "ewsAddressLine2": {
        "type": "string"
      },
      "pCard3Dtllinetot": {
        "type": "string"
      },
      "employeeNumber": {
        "type": "string"
      },
      "exponent": {
        "type": "string"
      },
      "txnSurchargeAmt": {
        "type": "string"
      },
      "deviceRegion": {
        "type": "string"
      },
      "magStripeTrack2": {
        "type": "string"
      },
      "dwSLI": {
        "type": "string",
        "enum": [
          "2",
          "4",
          "5",
          "6"
        ]
      },
      "bmlMerchantPromotionalCode": {
        "type": "string"
      },
      "pCardDestName": {
        "type": "string"
      },
      "pCardDestZip": {
        "type": "string"
      },
      "customerDOB": {
        "type": "string"
      },
      "encryptionId": {
        "type": "string"
      },
      "fxOptOutInd": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "softwareID": {
        "type": "string"
      },
      "ewsLastNameMatch": {
        "type": "string"
      },
      "customerID": {
        "type": "string"
      },
      "paymentBrand": {
        "type": "string"
      },
      "mbRecurringNoEndDateFlag": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "autoAuthFlexRedeemedAmt": {
        "type": "string"
      },
      "kttVersionNumber": {
        "type": "string"
      },
      "retryTrace": {
        "type": "string"
      },
      "tokenRequestorID": {
        "type": "string"
      },
      "tacDenial": {
        "type": "string"
      },
      "digitalWalletType": {
        "type": "string",
        "enum": [
          "MasterPass",
          "VSDWO",
          "VisaCheckout"
        ]
      },
      "bmlCustomerTypeFlag": {
        "type": "string"
      },
      "amexTranAdvAddn4": {
        "type": "string"
      },
      "pCard3VATtaxAmt": {
        "type": "string"
      },
      "emvParameterDownloadDate": {
        "type": "string"
      },
      "ewsAddressMatch": {
        "type": "string"
      },
      "rtauUpdatedCardExp": {
        "type": "string"
      },
      "ecpCheckSerialNumber": {
        "type": "string"
      },
      "riskInquiryTransactionID": {
        "type": "string"
      },
      "tacOnline": {
        "type": "string"
      },
      "paymentInd": {
        "type": "string",
        "enum": [
          "D"
        ]
      },
      "mitStoredCredentialInd": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "pCard3DutyAmt": {
        "type": "string"
      },
      "bmlTNCVersion": {
        "type": "string"
      },
      "avsDestPhoneNum": {
        "type": "string"
      },
      "pCardDestAddress": {
        "type": "string"
      },
      "mcProgramProtocol": {
        "type": "string",
        "enum": [
          "1",
          "2"
        ]
      },
      "ewsSSNTINMatch": {
        "type": "string"
      },
      "ctiSignatureDebitCard": {
        "type": "string"
      },
      "customerAni": {
        "type": "string"
      },
      "industryType": {
        "type": "string",
        "enum": [
          "EC",
          "IN",
          "IV",
          "MO",
          "RC",
          "RE"
        ]
      },
      "currencyCode": {
        "type": "string",
        "example": "840"
      },
      "version": {
        "type": "string",
        "description": "Feature version"
      },
      "autoDecisionResponse": {
        "type": "string"
      },
      "prLastName": {
        "type": "string"
      },
      "mbStatus": {
        "type": "string"
      },
      "cardBrand": {
        "type": "string",
        "enum": [
          "DP",
          "EC",
          "ED",
          "IM",
          "CZ",
          "CR",
          "VI",
          "MC",
          "AX",
          "DI",
          "JC",
          "DC"
        ]
      },
      "ewsAccountStatusCode": {
        "type": "string"
      },
      "avsRespCode": {
        "type": "string"
      },
      "pCard3DtlTaxType": {
        "type": "string"
      },
      "comments": {
        "type": "string"
      },
      "smdCity": {
        "type": "string"
      },
      "index": {
        "type": "string"
      },
      "pinKeySerialNumber": {
        "type": "string"
      },
      "useCustomerRefNum": {
        "type": "string"
      },
      "deviceCountry": {
        "type": "string"
      },
      "tsi": {
        "type": "string"
      },
      "mbType": {
        "type": "string",
        "enum": [
          "R",
          "D"
        ]
      },
      "sequenceNumber": {
        "type": "string"
      },
      "ewsBusinessNameMatch": {
        "type": "string"
      },
      "customerAccountType": {
        "type": "string"
      },
      "mbMicroPaymentMaxTransactions": {
        "type": "string"
      },
      "vendorID": {
        "type": "string"
      },
      "pCard3DtlQty": {
        "type": "string"
      },
      "mitReceivedTransactionID": {
        "type": "string"
      },
      "cardholderAuthenticateMethod": {
        "type": "string"
      },
      "pCard3DtlIndex": {
        "type": "string"
      },
      "smdPostalCode": {
        "type": "string"
      },
      "avsPhone": {
        "type": "string"
      },
      "debitPinSurchargeAmount": {
        "type": "string"
      },
      "avsDestAddress1": {
        "type": "string"
      },
      "industrySupport": {
        "type": "string"
      },
      "mobileWirelessIndicator": {
        "type": "string"
      },
      "batchFailedAcctNum": {
        "type": "string"
      },
      "avsCountryCode": {
        "type": "string",
        "enum": [
          "US",
          "CA",
          "GB",
          "UK"
        ]
      },
      "kaptchaSessionID": {
        "type": "string"
      },
      "bmlCustomerRegistrationDate": {
        "type": "string"
      },
      "ecpImageReferenceNumber": {
        "type": "string"
      },
      "pCard3DtlCommCd": {
        "type": "string"
      },
      "debitPinTraceNumber": {
        "type": "string"
      },
      "lastRetryDate": {
        "type": "string"
      },
      "mitSubmittedTransactionID": {
        "type": "string"
      },
      "fxDefaultRateInd": {
        "type": "string"
      },
      "browserLanguage": {
        "type": "string"
      },
      "shippingRef": {
        "type": "string"
      },
      "pCard3VATtaxRate": {
        "type": "string"
      },
      "readerSerialNumber": {
        "type": "string"
      },
      "customerZIP": {
        "type": "string"
      },
      "avsName": {
        "type": "string"
      },
      "customerPhone": {
        "type": "string"
      },
      "ctiIssuingCountry": {
        "type": "string"
      },
      "numberOfCards": {
        "type": "string"
      },
      "avsDestZip": {
        "type": "string"
      },
      "scaMerchantInitiatedTransaction": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "customerNetwork": {
        "type": "string"
      },
      "ecpDelvMethod": {
        "type": "string",
        "enum": [
          "B",
          "A"
        ]
      },
      "startAccountNum": {
        "type": "string"
      },
      "ecpTerminalCity": {
        "type": "string"
      },
      "modulusLength": {
        "type": "string"
      },
      "worstCountry": {
        "type": "string"
      },
      "countryFraudFilterStatus": {
        "type": "string"
      },
      "profileProcStatusMsg": {
        "type": "string"
      },
      "pCardDestAddress2": {
        "type": "string"
      },
      "ewsIDState": {
        "type": "string"
      },
      "txRefIdx": {
        "type": "string"
      },
      "fourteenDayVelocity": {
        "type": "string"
      },
      "pCardDestCity": {
        "type": "string"
      },
      "authenticationECIInd": {
        "type": "string",
        "enum": [
          "2",
          "5",
          "6",
          "7",
          "20"
        ]
      },
      "profileProcStatus": {
        "type": "string"
      },
      "discountAmt": {
        "type": "string"
      },
      "remainingBalance": {
        "type": "string"
      },
      "amexTranAdvAddn3": {
        "type": "string"
      },
      "ewsIDStateMatch": {
        "type": "string"
      },
      "authNetwkID": {
        "type": "string"
      },
      "hostRespCode": {
        "type": "string"
      },
      "prMaskedAccountNumber": {
        "type": "string"
      },
      "mbRemoveFlag": {
        "type": "string"
      },
      "axAEVV": {
        "type": "string"
      },
      "autoAuthFlexHostTrace": {
        "type": "string"
      },
      "bmlCustomerIP": {
        "type": "string"
      },
      "tokenAssuranceMethod": {
        "type": "string"
      },
      "submittedNetworkTransactionId": {
        "type": "string"
      },
      "receivedNetworkTransactionId": {
        "type": "string"
      },
      "partialReversalAmount": {
        "type": "string"
      },
      "mbMicroPaymentDaysLeft": {
        "type": "string"
      },
      "ewsSSNTIN": {
        "type": "string"
      },
      "bmlCustomerBirthDate": {
        "type": "string"
      },
      "sixHourVelocity": {
        "type": "string"
      },
      "debitPinNetworkID": {
        "type": "string"
      },
      "ewsMiddleName": {
        "type": "string"
      },
      "euddIBAN": {
        "type": "string"
      },
      "ctiPayrollCard": {
        "type": "string"
      },
      "rtauOptOutInd": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "activationCount": {
        "type": "string"
      },
      "mbRecurringEndDate": {
        "type": "string"
      },
      "terminalID": {
        "type": "string"
      },
      "bmlCustomerResidenceStatus": {
        "type": "string"
      },
      "digitalTokenCryptogram": {
        "type": "string"
      },
      "cashValueOfFencibleItems": {
        "type": "string"
      },
      "customerRefNum": {
        "type": "string"
      },
      "dsrpCryptogram": {
        "type": "string"
      },
      "qhpAmt": {
        "type": "string"
      },
      "rxAmt": {
        "type": "string"
      },
      "visionAmt": {
        "type": "string"
      },
      "clinicOtherAmt": {
        "type": "string"
      },
      "dentalAmt": {
        "type": "string"
      },
      "iiasFlag": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "tAATicketNumber": {
        "type": "string"
      },
      "tAAPassengerName": {
        "type": "string"
      },
      "tAACustomerCode": {
        "type": "string"
      },
      "tAAIssueDate": {
        "type": "string"
      },
      "tAAIssuingCarrier": {
        "type": "string"
      },
      "tAAArrivalDate": {
        "type": "string"
      },
      "tAANumberInParty": {
        "type": "string"
      },
      "tAAConjunctionTicketIndicator": {
        "type": "string",
        "enum": [
          "Y",
          "N",
          null
        ]
      },
      "tAAElectronicTicketIndicator": {
        "type": "string",
        "enum": [
          "Y",
          "N",
          null
        ]
      },
      "tAARestrictedTicketIndicator": {
        "type": "string",
        "emum": [
          "0",
          "1",
          null
        ]
      },
      "tAAIATAClientCode": {
        "type": "string"
      },
      "tAACreditReasonIndicator": {
        "type": "string",
        "enum": [
          "A",
          "B",
          "C",
          "O",
          "P",
          null
        ]
      },
      "tAATicketChangeIndicator": {
        "type": "string",
        "enum": [
          "C",
          "N",
          null
        ]
      },
      "tAADocumentType": {
        "type": "string"
      },
      "tAATicketType": {
        "type": "string",
        "enum": [
          "T",
          "A",
          null
        ]
      },
      "tAAFormatCode": {
        "type": "string",
        "enum": [
          "1",
          "14"
        ]
      },
      "tAATransactionType": {
        "type": "string - TKT - MSC - REF - EXC - null"
      },
      "tAATicketingCarrierName": {
        "type": "string"
      },
      "tAATicketIssueCity": {
        "type": "string"
      },
      "tAATravelPackageIndicator": {
        "type": "string"
      },
      "tAATotalFare": {
        "type": "string"
      },
      "tAATotalFees": {
        "type": "string"
      },
      "tAATotalTaxes": {
        "type": "string"
      },
      "tAAExchangeTicketAmount": {
        "type": "string"
      },
      "tAAExchangeFeeAmount": {
        "type": "string"
      },
      "tAAInvoiceNumber": {
        "type": "string"
      },
      "tAAOriginalCurrencyCode": {
        "type": "string"
      },
      "tAADepartureDate": {
        "type": "string"
      },
      "tAAReturnDate": {
        "type": "string"
      },
      "tAATotalCost": {
        "type": "string"
      },
      "tAACruiseDuration": {
        "type": "string"
      },
      "tAAShipName": {
        "type": "string"
      },
      "tAARegionCode": {
        "type": "string"
      },
      "tAACountryCode": {
        "type": "string"
      },
      "tAACityName": {
        "type": "string"
      },
      "tripLegRecordSequenceNumber": {
        "type": "string"
      },
      "conjunctionTicketNumber": {
        "type": "string"
      },
      "exchangeTicketNumber": {
        "type": "string"
      },
      "couponNumber": {
        "type": "string",
        "enum": [
          "1",
          "2",
          "3",
          "4",
          null
        ]
      },
      "serviceClass": {
        "type": "string"
      },
      "carrierCode": {
        "type": "string"
      },
      "stopOverCode": {
        "type": "string",
        "enum": [
          "O",
          "X",
          null
        ]
      },
      "cityOfOriginAirportCode": {
        "type": "string"
      },
      "cityOfDestinationAirportCode": {
        "type": "string"
      },
      "flightNumber": {
        "type": "string"
      },
      "departureDate": {
        "type": "string"
      },
      "departureTime": {
        "type": "string"
      },
      "arrivalTime": {
        "type": "string"
      },
      "fareBasisCode": {
        "type": "string"
      },
      "tripLegFare": {
        "type": "string"
      },
      "tripLegTaxes": {
        "type": "string"
      },
      "tripLegFee": {
        "type": "string"
      },
      "endorsementsRestrictions": {
        "type": "string"
      },
      "smdServiceEstablishmentNum": {
        "type": "string"
      },
      "smdTaxExemptCharityInd": {
        "type": "string",
        "enum": [
          "N",
          "Y",
          null
        ]
      },
      "ctiPrepaidReloadableCard": {
        "type": "string"
      },
      "Cryptogram": {
        "type": "string"
      },
      "pCardCommodityCode": {
        "type": "string"
      },
      "pCard3InvoiceDiscTreatment": {
        "type": "string"
      },
      "pCard3TaxTreatment": {
        "type": "string"
      },
      "pCard3UniqueVATInvoiceRefNum": {
        "type": "string"
      },
      "pCard3FreightShipVATTaxAmt": {
        "type": "string"
      },
      "pCard3ShipVATRate": {
        "type": "string"
      },
      "pCard3DtlTaxAmt2": {
        "type": "string"
      },
      "pCard3DtlTaxRate2": {
        "type": "string"
      },
      "pCard3DtlTaxType2": {
        "type": "string"
      },
      "pCard3DtlDiscTreatmentCd": {
        "type": "string"
      },
      "pCard3DtlInd": {
        "type": "string"
      },
      "paymentMethod": {
        "type": "string"
      },
      "customerCurrencyCode": {
        "type": "string"
      },
      "customerPreferredLanguage": {
        "type": "string"
      },
      "shopperFirstName": {
        "type": "string"
      },
      "shopperLastName": {
        "type": "string"
      },
      "shopperEmail": {
        "type": "string"
      },
      "merchantRedirectURL": {
        "type": "string"
      },
      "customerLocale": {
        "type": "string"
      },
      "dynamicDescriptor": {
        "type": "string"
      },
      "hostTxRefNum": {
        "type": "string"
      },
      "redirectURL": {
        "type": "string"
      },
      "redirectSecret": {
        "type": "string"
      },
      "fundingStatus": {
        "type": "string"
      },
      "address1": {
        "type": "string"
      },
      "address2": {
        "type": "string"
      },
      "postalCode": {
        "type": "string"
      },
      "countryCode": {
        "type": "string"
      },
      "firstName": {
        "type": "string"
      },
      "lastName": {
        "type": "string"
      },
      "isShippingRequired": {
        "type": "string"
      },
      "state": {
        "type": "string"
      },
      "city": {
        "type": "string"
      },
      "encryptedPan": {
        "type": "string"
      },
      "encryptedPanMethod": {
        "type": "string"
      },
      "encryptedPanKey": {
        "type": "string"
      },
      "encryptedPanPublicKeyFingerPrint": {
        "type": "string"
      },
      "encryptedPanHash": {
        "type": "string"
      },
      "altmopBillingAddress1": {
        "type": "string"
      },
      "altmopBillingAddress2": {
        "type": "string"
      },
      "altmopBillingPostalCode": {
        "type": "string"
      },
      "altmopBillingCountryCode": {
        "type": "string"
      },
      "altmopBillingFirstName": {
        "type": "string"
      },
      "altmopBillingLastName": {
        "type": "string"
      },
      "altmopBillingState": {
        "type": "string"
      },
      "altmopBillingCity": {
        "type": "string"
      },
      "orderItems": {
        "type": "string"
      },
      "minAmt": {
        "type": "string"
      },
      "maxAmt": {
        "type": "string"
      }
    },
    "examples": {
      "payments-success": {
        "summary": "An example of a payments response",
        "value": {
          "transType": "AC",
          "merchant": {
            "bin": "000001",
            "merchantID": "123456",
            "terminalID": "001"
          },
          "paymentInstrument": {
            "card": {
              "cardBrand": "MC"
            }
          },
          "order": {
            "orderID": "123456",
            "industryType": "EC",
            "txRefNum": "625EC0E49LK88FCB0906BB8AAD435F42A2FC553E0",
            "txRefIdx": "1",
            "respDateTime": "20220419100213",
            "authNetwkID": "02",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Approved",
              "hostRespCode": "00",
              "actualRespCd": "00",
              "respCode": "00",
              "approvalStatus": "1",
              "authorizationCode": "896986",
              "mcRecurringAdvCode": "  ",
              "pymtBrandAuthResponseCode": "000",
              "pymtBrandResponseCodeCategory": "X"
            }
          }
        }
      },
      "refund-success": {
        "summary": "An example of a refund response",
        "value": {
          "transType": "FR",
          "merchant": {
            "bin": "000001",
            "merchantID": "123456",
            "terminalID": "001"
          },
          "paymentInstrument": {
            "card": {
              "cardBrand": "MC"
            }
          },
          "order": {
            "orderID": "123456",
            "industryType": "EC",
            "txRefNum": "625EC0E49LK88FCB0906CC8AAD435F42A2FC553E0",
            "txRefIdx": "2",
            "respDateTime": "20220425081517",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Approved",
              "hostRespCode": "100",
              "respCode": "00",
              "approvalStatus": "1",
              "authorizationCode": "123456",
              "pymtBrandAuthResponseCode": "000",
              "pymtBrandResponseCodeCategory": "X"
            },
            "tokenAssuranceMethod": "54"
          }
        }
      },
      "capture-success": {
        "summary": "An example of a capture response",
        "value": {
          "merchant": {
            "bin": "000001",
            "terminalID": "001"
          },
          "order": {
            "orderID": "123456",
            "amount": "100",
            "txRefNum": "625EC0E49LK88FCB0906CC8AAAB35F42A2FC553E0",
            "txRefIdx": "2",
            "respDateTime": "20220425081517",
            "splitTxRefIdx": "6266A707B7BEAAB398EE8FDE8143333D8A665410",
            "status": {
              "procStatus": "0"
            },
            "tokenAssuranceMethod": "54"
          }
        }
      },
      "reversal-success": {
        "summary": "An example of a reversal response",
        "value": {
          "merchant": {
            "bin": "000001",
            "merchantID": "123456",
            "terminalID": "001"
          },
          "order": {
            "orderID": "123456",
            "outstandingAmt": "0",
            "txRefNum": "625EC0E49LK88FCB09BAAC8AAD435F42A2FC553E0",
            "txRefIdx": "2",
            "respDateTime": "20220425081517",
            "status": {
              "procStatus": "0",
              "approvalStatus": "1"
            }
          }
        }
      },
      "settle-success": {
        "summary": "An example of a settle response",
        "value": {
          "merchant": {
            "bin": "000001",
            "merchantID": "123456",
            "terminalID": "001"
          },
          "order": {
            "status": {
              "procStatus": "0"
            }
          },
          "batch": {
            "batchSeqNum": "DD7C0C77EA5656ACD05358E67FA94926"
          }
        }
      },
      "profile-success": {
        "summary": "An example of a profile response",
        "value": {
          "version": "4.7",
          "merchant": {
            "bin": "000001"
          },
          "profile": {
            "customerRefNum": "12345678",
            "profileOrderOverideInd": "A",
            "customerName": "Customer Name",
            "customerEmail": "test@email.com",
            "customerPhone": "1234561234",
            "profileAction": "CREATE",
            "customerAddress1": "123 Main St",
            "customerCity": "Tampa",
            "customerState": "FL",
            "customerZIP": "12345",
            "customerCountryCode": "US"
          },
          "order": {
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Profile Request Processed"
            },
            "orderDefaultAmount": "100"
          },
          "paymentInstrument": {
            "card": {
              "cardBrand": "MC",
              "ccAccountNum": "545454XXXXXX5454",
              "ccExp": "202206"
            },
            "customerAccountType": "CC"
          }
        }
      },
      "giftcard-success": {
        "summary": "An example of a giftcard response",
        "value": {
          "version": "4.7",
          "flexAction": "activate",
          "merchant": {
            "terminalID": "001"
          },
          "order": {
            "orderID": "123456",
            "industryType": "EC",
            "txRefNum": "625EC0E49LK88FCB0906BB8AAD435F42A2FC553E0",
            "txRefIdx": "0",
            "respDateTime": "20220419100213",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Approved",
              "respCode": "00",
              "approvalStatus": "1",
              "authorizationCode": "896986"
            },
            "flexAcctBalance": "100",
            "flexRequestedAmount": "100",
            "flexRedeemedAmt": "100",
            "flexHostTrace": "01234567",
            "superBlockID": "6266F1B819A8BA36CACDBDA96063F9182544545A"
          },
          "paymentInstrument": {
            "card": {
              "cardType": "FC"
            }
          }
        }
      },
      "inquiry-success": {
        "summary": "An example of an inquiry response of a payments transaction",
        "value": {
          "version": "4.7",
          "transType": "A",
          "merchant": {
            "bin": "000001",
            "merchantID": "123456",
            "terminalID": "001"
          },
          "order": {
            "orderID": "123456",
            "txRefNum": "625EC0E49LK88FCB0906BB8AAD435F42A2FC553E0",
            "txRefIdx": "0",
            "respDateTime": "20220419100213",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Approved",
              "hostRespCode": "100",
              "respCode": "00",
              "approvalStatus": "1",
              "authorizationCode": "123456"
            }
          },
          "paymentInstrument": {
            "card": {
              "cardBrand": "MC",
              "ccAccountNum": "545454XXXXXX5454"
            }
          },
          "avsBilling": {
            "avsRespCode": "3 ",
            "hostAVSRespCode": "  "
          },
          "cardholderVerification": {
            "cvvRespCode": "M",
            "hostCVVRespCode": "M"
          }
        }
      },
      "accountupdater-success": {
        "summary": "An example of an accountupdater response",
        "value": {
          "version": "4.7",
          "profile": {
            "customerRefNum": "12345678",
            "status": "A",
            "customerProfileAction": "AU",
            "scheduledDate": "06062022"
          },
          "order": {
            "responseDateTime": "20220425 153258",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Profile Request Scheduled"
            }
          }
        }
      },
      "fraudanalysis-success": {
        "summary": "An example of a fraudanalysis response",
        "value": {
          "version": "4.7",
          "merchant": {
            "bin": "000001",
            "merchantID": "123456",
            "terminalID": "001"
          },
          "order": {
            "orderID": "123456",
            "industryType": "EC",
            "txRefNum": "625EC0E49LBCA8FCB0906BB8AAD435F42A2FC553E0",
            "respDateTime": "20220419100213",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "No reason to decline",
              "hostRespCode": "104",
              "respCode": "27",
              "approvalStatus": "1"
            }
          },
          "paymentInstrument": {
            "card": {
              "cardBrand": "VI"
            }
          },
          "fraudAnalysisResponse": {
            "fraudScoreIndicator": "1",
            "fraudStatusCode": "T998"
          }
        }
      },
      "emvhostparametersdownload-success": {
        "summary": "An example of a emvhostparametersdownload response",
        "value": {
          "emvDownloadDate": "20220118",
          "pEMVProviderLineItem": {
            "providerItem": [
              {
                "cardBrand": "MC",
                "applicationId": "A000000004",
                "fallback": "Y",
                "biasedRandomThreshold": "0",
                "floorLimit": "0",
                "pEMVPublicKeyLineItem": {
                  "publicKeyItem": [
                    {
                      "index": "05",
                      "exponentLength": "2",
                      "exponent": "03        ",
                      "modulusLength": "352",
                      "modulus": "CB26FC830B43785ABDCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D657336865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EFDC0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747F",
                      "checksumLength": "40",
                      "checksum": "F910A1504D5FFB793DBAC3B500765E1ABCAD72D9"
                    },
                    {
                      "index": "06",
                      "exponentLength": "2",
                      "exponent": "03        ",
                      "modulusLength": "496",
                      "modulus": "CB26FC830B43785B2BCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D65CDB6865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EF3D0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747F",
                      "checksumLength": "40",
                      "checksum": "F910A1504D5FFB793D94F3B500765FCDACAD72D9"
                    }
                  ]
                }
              },
              {
                "cardBrand": "VI",
                "applicationId": "A000000003",
                "fallback": "Y",
                "biasedRandomThreshold": "0",
                "floorLimit": "0",
                "pEMVPublicKeyLineItem": {
                  "publicKeyItem": [
                    {
                      "index": "08",
                      "exponentLength": "2",
                      "exponent": "03        ",
                      "modulusLength": "352",
                      "modulus": "CB26FC830B43785ABDCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D657336865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EFDC0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747F",
                      "checksumLength": "40",
                      "checksum": "20D21312695ACD205ADC2FD2822BD22DE21CF9A8"
                    },
                    {
                      "index": "09",
                      "exponentLength": "2",
                      "exponent": "03        ",
                      "modulusLength": "496",
                      "modulus": "9D912248DE0A4E39C1A7DDE3F6D2588992C1A4095AFBD1824D1BA74847F2BC4926D2EFD904B4B54954CD189A54C5D1179654F8F9B0D2AB5F0357EB642FEDA95D3912C6576945FAB897E7062CAA44A4AA06B8FE6E3DBA18AF6AE3738E30429EE9BE03427C9D64F695FA8CAB4BFE37685ACD4AD1D76BFCAD15908C077FFE6DC5521ECEF5D278A96E26F57359FFAEDA19434B937F1AD999DC5C41EB11935B44C18100E857F431A4A5A6BB65114F174C2D7B59FDF237D6BB1DD0916E644D709DED56481477C75D95CDD68254615F7740EC07F330AC5D67BCD75BF23D28A140826C026DBDE971A37CD3EF9B8DF644AC385010501EFC6509D7A41",
                      "checksumLength": "40",
                      "checksum": "1FF80A40173F52D7D27EBCA6A146A1C8CCB29046"
                    }
                  ]
                }
              }
            ]
          },
          "order": {
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Success"
            }
          }
        }
      },
      "token-success": {
        "summary": "An example of a detokenize token response",
        "value": {
          "version": "4.7",
          "merchant": {
            "bin": "000001",
            "merchantID": "123456"
          },
          "order": {
            "orderID": "123456",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "No reason to decline",
              "hostRespCode": "104"
            }
          },
          "paymentInstrument": {
            "card": {
              "cardBrand": "VI",
              "ccAccountNum": "4444412121264448"
            }
          },
          "token": {
            "actionCode": "DT"
          }
        }
      },
      "transactionstatus-success": {
        "summary": "An example of a transactionstatus response",
        "value": {
          "merchant": {
            "merchantID": "123456",
            "terminalID": "001"
          },
          "order": {
            "txRefNum": "625EC0E49LK88FCB0906FACDAD435F42A2FC553E0",
            "respDateTime": "20220419100213",
            "status": {
              "procStatus": "0",
              "procStatusMessage": "Pending",
              "respCode": "V2",
              "approvalStatus": "3",
              "fundingStatus": "NOT_EXPECTE"
            },
            "alternativePaymentMethod": {
              "hostTxRefNum": "793252238",
              "paymentMethod": "AY"
            }
          }
        }
      }
    }
  }
}